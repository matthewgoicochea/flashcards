{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/AddCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { createCard, readDeck } from \"../utils/api\";\nimport CardForm from \"./CardForm\";\nimport BreadcrumbBar from \"./BreadcrumbBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard({\n  OnClick,\n  setCurrentDeck,\n  currentDeck,\n  newCard,\n  setNewCard\n}) {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const deckId = params.deckId;\n  useEffect(() => {\n    const deck = readDeck(deckId);\n    deck.then(deck => {\n      setCurrentDeck({ ...currentDeck,\n        name: deck.name\n      });\n    });\n  }, []);\n\n  const OnDone = () => {\n    history.push(`/decks/${deckId}`);\n  };\n\n  const OnSave = () => {\n    createCard(currentDeck.id, newCard);\n    setNewCard({ ...newCard,\n      front: \"\",\n      back: \"\"\n    });\n    history.push(`/decks/${deckId}/cards/new`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadcrumbBar, {\n      nav1: currentDeck.name,\n      link1: `/decks/${deckId}`,\n      nav2: \"Add Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [currentDeck.name, \": Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n      newCard: newCard,\n      setNewCard: setNewCard,\n      cardFront: \"Front side of card\",\n      cardBack: \"Back side of card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mr-2\",\n      id: \"doneAddCard\",\n      onClick: OnDone,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      id: \"saveAddCard\",\n      onClick: OnSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCard, \"kW6iZuCyn1Rcf65yrTAX3Zhj9pE=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/AddCard.jsx"],"names":["React","Fragment","useEffect","useHistory","useParams","createCard","readDeck","CardForm","BreadcrumbBar","AddCard","OnClick","setCurrentDeck","currentDeck","newCard","setNewCard","history","params","deckId","deck","then","name","OnDone","push","OnSave","id","front","back"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,cAArC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,OAAT,CAAiB;AACfC,EAAAA,OADe;AAEfC,EAAAA,cAFe;AAGfC,EAAAA,WAHe;AAIfC,EAAAA,OAJe;AAKfC,EAAAA;AALe,CAAjB,EAMG;AAAA;;AACD,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAMa,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,MAAM,GAAGD,MAAM,CAACC,MAAtB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,IAAI,GAAGZ,QAAQ,CAACW,MAAD,CAArB;AACAC,IAAAA,IAAI,CAACC,IAAL,CAAWD,IAAD,IAAU;AAClBP,MAAAA,cAAc,CAAC,EAAE,GAAGC,WAAL;AAAkBQ,QAAAA,IAAI,EAAEF,IAAI,CAACE;AAA7B,OAAD,CAAd;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,MAAM,GAAG,MAAM;AACnBN,IAAAA,OAAO,CAACO,IAAR,CAAc,UAASL,MAAO,EAA9B;AACD,GAFD;;AAIA,QAAMM,MAAM,GAAG,MAAM;AACnBlB,IAAAA,UAAU,CAACO,WAAW,CAACY,EAAb,EAAiBX,OAAjB,CAAV;AACAC,IAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcY,MAAAA,KAAK,EAAE,EAArB;AAAyBC,MAAAA,IAAI,EAAE;AAA/B,KAAD,CAAV;AACAX,IAAAA,OAAO,CAACO,IAAR,CAAc,UAASL,MAAO,YAA9B;AACD,GAJD;;AAMA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,IAAI,EAAEL,WAAW,CAACQ,IADpB;AAEE,MAAA,KAAK,EAAG,UAASH,MAAO,EAF1B;AAGE,MAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,iBAAKL,WAAW,CAACQ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,QAAD;AACE,MAAA,OAAO,EAAEP,OADX;AAEE,MAAA,UAAU,EAAEC,UAFd;AAGE,MAAA,SAAS,EAAE,oBAHb;AAIE,MAAA,QAAQ,EAAE;AAJZ;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,OAAO,EAAEO,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAoBE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,EAAE,EAAC,aAAvC;AAAqD,MAAA,OAAO,EAAEE,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAtDQd,O;UAOSN,U,EACDC,S;;;KARRK,O;AAwDT,eAAeA,OAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { createCard, readDeck } from \"../utils/api\";\nimport CardForm from \"./CardForm\";\nimport BreadcrumbBar from \"./BreadcrumbBar\";\n\nfunction AddCard({\n  OnClick,\n  setCurrentDeck,\n  currentDeck,\n  newCard,\n  setNewCard,\n}) {\n  const history = useHistory();\n  const params = useParams();\n  const deckId = params.deckId;\n\n  useEffect(() => {\n    const deck = readDeck(deckId);\n    deck.then((deck) => {\n      setCurrentDeck({ ...currentDeck, name: deck.name });\n    });\n  }, []);\n\n  const OnDone = () => {\n    history.push(`/decks/${deckId}`);\n  };\n\n  const OnSave = () => {\n    createCard(currentDeck.id, newCard);\n    setNewCard({ ...newCard, front: \"\", back: \"\" });\n    history.push(`/decks/${deckId}/cards/new`);\n  };\n\n  return (\n    <Fragment>\n      <BreadcrumbBar\n        nav1={currentDeck.name}\n        link1={`/decks/${deckId}`}\n        nav2={\"Add Card\"}\n      />\n      <h3>{currentDeck.name}: Add Card</h3>\n      <CardForm\n        newCard={newCard}\n        setNewCard={setNewCard}\n        cardFront={\"Front side of card\"}\n        cardBack={\"Back side of card\"}\n      />\n      <button\n        className=\"btn btn-secondary mr-2\"\n        id=\"doneAddCard\"\n        onClick={OnDone}\n      >\n        Done\n      </button>\n      <button className=\"btn btn-primary\" id=\"saveAddCard\" onClick={OnSave}>\n        Save\n      </button>\n    </Fragment>\n  );\n}\n\nexport default AddCard;\n"]},"metadata":{},"sourceType":"module"}