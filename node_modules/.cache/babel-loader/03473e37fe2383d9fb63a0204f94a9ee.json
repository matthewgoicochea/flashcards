{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/DeckList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewDeck from \"./NewDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckList({\n  OnClick\n}) {\n  _s();\n\n  const [decks, setDecks] = useState({});\n  const deckList = [/*#__PURE__*/_jsxDEV(NewDeck, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 21\n  }, this), /*#__PURE__*/_jsxDEV(NewDeck, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 34\n  }, this)];\n  useEffect(() => {\n    setDecks({});\n    const abortController = new AbortController();\n\n    async function loadDecks() {\n      try {\n        const response = await fetch(`http://localhost:5000/decks`, {\n          signal: abortController.signal\n        });\n        const decksFromAPI = await response.json();\n        setDecks(decksFromAPI);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDecks();\n    console.log(\"decks:\", decks);\n    return () => {\n      abortController.abort();\n    };\n  }, [deckList]);\n  return deckList;\n}\n\n_s(DeckList, \"FhuxIck5iSrL9l119VKCRkXhg4E=\");\n\n_c = DeckList;\nexport default DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/DeckList.jsx"],"names":["React","useEffect","useState","NewDeck","DeckList","OnClick","decks","setDecks","deckList","abortController","AbortController","loadDecks","response","fetch","signal","decksFromAPI","json","error","name","console","log","abort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMM,QAAQ,GAAG,cAAC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAD,eAAc,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAd,CAAjB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,UAAME,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,mBAAeC,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAAF,EAAgC;AAC1DC,UAAAA,MAAM,EAAEL,eAAe,CAACK;AADkC,SAAhC,CAA5B;AAGA,cAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AACAT,QAAAA,QAAQ,CAACQ,YAAD,CAAR;AACD,OAND,CAME,OAAOE,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,SAFD,MAEO;AACL,gBAAMH,KAAN;AACD;AACF;AACF;;AACDN,IAAAA,SAAS;AACTQ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBd,KAAtB;AAEA,WAAO,MAAM;AACXG,MAAAA,eAAe,CAACY,KAAhB;AACD,KAFD;AAGD,GAxBQ,EAwBN,CAACb,QAAD,CAxBM,CAAT;AA0BA,SAAOA,QAAP;AACD;;GAhCQJ,Q;;KAAAA,Q;AAkCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NewDeck from \"./NewDeck\";\n\nfunction DeckList({ OnClick }) {\n  const [decks, setDecks] = useState({});\n\n  const deckList = [<NewDeck />, <NewDeck />];\n\n  useEffect(() => {\n    setDecks({});\n    const abortController = new AbortController();\n    async function loadDecks() {\n      try {\n        const response = await fetch(`http://localhost:5000/decks`, {\n          signal: abortController.signal,\n        });\n        const decksFromAPI = await response.json();\n        setDecks(decksFromAPI);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadDecks();\n    console.log(\"decks:\", decks);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [deckList]);\n\n  return deckList;\n}\n\nexport default DeckList;\n"]},"metadata":{},"sourceType":"module"}