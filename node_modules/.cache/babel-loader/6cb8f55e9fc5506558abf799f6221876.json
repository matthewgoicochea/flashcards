{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { updateDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  OnClick\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const history = useHistory();\n  const [editedDeck, setEditedDeck] = useState({\n    id: deckId,\n    name: \"\",\n    description: \"\"\n  });\n  const [editState, setEditState] = useState({\n    decks: {\n      name: \"\",\n      description: \"\"\n    },\n    placeholderName: \"...loading\",\n    placeholderDescription: \"...loading\",\n    editedDeck: {\n      id: deckId,\n      name: \"\",\n      description: \"\"\n    }\n  });\n\n  const onSubmit = event => {\n    updateDeck(editedDeck);\n    history.push(`/decks/${deckId}`);\n  };\n\n  const handleNameChange = event => {\n    //setEditedDeck({ ...editedDeck, name: event.target.value });\n    setEditState({ ...editState,\n      editedDeck: { ...editState.editedDeck,\n        name: event.target.value\n      }\n    });\n  };\n\n  const handleDescriptionChange = event => {\n    //setEditedDeck({ ...editedDeck, description: event.target.value });\n    setEditState({ ...editState,\n      editedDeck: { ...editState.editedDeck,\n        name: event.target.value\n      }\n    });\n  };\n\n  useEffect(() => {\n    async function loadDecks() {\n      const response = await fetch(\"http://localhost:5000/decks\");\n      const decksFromAPI = await response.json();\n      setEditState({ ...editState,\n        decks: decksFromAPI,\n        placeholderName: decksFromAPI[deckId - 1].name,\n        placeholderDescription: decksFromAPI[deckId - 1].description\n      });\n    }\n\n    loadDecks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"form-label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: editState.placeholderName,\n        onChange: handleNameChange,\n        value: editedDeck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        className: \"form-label\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"description\",\n        rows: \"3\",\n        placeholder: editState.placeholderDescription,\n        onChange: handleDescriptionChange,\n        value: editedDeck.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        id: \"cancelEditDeck\",\n        onClick: OnClick,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        id: \"submitEditDeck\",\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditDeck, \"bCe528WaEpXL0v0fB2qcMi1pdj4=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.jsx"],"names":["React","Fragment","useEffect","useState","useHistory","useParams","updateDeck","EditDeck","OnClick","params","deckId","history","editedDeck","setEditedDeck","id","name","description","editState","setEditState","decks","placeholderName","placeholderDescription","onSubmit","event","push","handleNameChange","target","value","handleDescriptionChange","loadDecks","response","fetch","decksFromAPI","json"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { updateDeck } from \"../utils/api\";\n\nfunction EditDeck({ OnClick }) {\n  const params = useParams();\n  const deckId = params.deckId;\n  const history = useHistory();\n\n  const [editedDeck, setEditedDeck] = useState({\n    id: deckId,\n    name: \"\",\n    description: \"\",\n  });\n\n  const [editState, setEditState] = useState({\n    decks: { name: \"\", description: \"\" },\n    placeholderName: \"...loading\",\n    placeholderDescription: \"...loading\",\n    editedDeck: {\n      id: deckId,\n      name: \"\",\n      description: \"\",\n    },\n  });\n\n  const onSubmit = (event) => {\n    updateDeck(editedDeck);\n    history.push(`/decks/${deckId}`);\n  };\n\n  const handleNameChange = (event) => {\n    //setEditedDeck({ ...editedDeck, name: event.target.value });\n\n    setEditState({\n      ...editState,\n      editedDeck: { ...editState.editedDeck, name: event.target.value },\n    });\n  };\n\n  const handleDescriptionChange = (event) => {\n    //setEditedDeck({ ...editedDeck, description: event.target.value });\n    setEditState({\n      ...editState,\n      editedDeck: { ...editState.editedDeck, name: event.target.value },\n    });\n  };\n\n  useEffect(() => {\n    async function loadDecks() {\n      const response = await fetch(\"http://localhost:5000/decks\");\n      const decksFromAPI = await response.json();\n      setEditState({\n        ...editState,\n        decks: decksFromAPI,\n        placeholderName: decksFromAPI[deckId - 1].name,\n        placeholderDescription: decksFromAPI[deckId - 1].description,\n      });\n    }\n    loadDecks();\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"mb-3\">\n        <h1>Edit Deck</h1>\n        <label htmlFor=\"name\" className=\"form-label\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"name\"\n          placeholder={editState.placeholderName}\n          onChange={handleNameChange}\n          value={editedDeck.name}\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"description\" className=\"form-label\">\n          Description\n        </label>\n        <textarea\n          className=\"form-control\"\n          id=\"description\"\n          rows=\"3\"\n          placeholder={editState.placeholderDescription}\n          onChange={handleDescriptionChange}\n          value={editedDeck.description}\n        ></textarea>\n        <button\n          className=\"btn btn-secondary\"\n          id=\"cancelEditDeck\"\n          onClick={OnClick}\n        >\n          Cancel\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          id=\"submitEditDeck\"\n          onClick={onSubmit}\n        >\n          Submit\n        </button>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default EditDeck;\n"]},"metadata":{},"sourceType":"module"}