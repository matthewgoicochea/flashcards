{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport BreadcrumbBar from \"./BreadcrumbBar\";\nimport DeckForm from \"./DeckForm\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  OnClick,\n  newDeckObject\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const history = useHistory();\n  const [editState, setEditState] = useState({\n    decks: {\n      name: \"\",\n      description: \"\"\n    },\n    placeholderName: \"...loading\",\n    placeholderDescription: \"...loading\",\n    editedDeck: {\n      id: deckId,\n      name: \"\",\n      description: \"\"\n    }\n  });\n\n  const onSubmit = event => {\n    updateDeck(editState.editedDeck);\n    history.push(`/decks/${deckId}`);\n  };\n\n  useEffect(() => {\n    readDeck(deckId).then(deck => {\n      setEditState({ ...editState,\n        placeholderName: deck.name,\n        placeholderDescription: deck.description\n      });\n    });\n  }, []);\n\n  const OnCancel = () => {\n    history.push(`/decks/${deckId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadcrumbBar, {\n      nav1: editState.placeholderName,\n      link1: \"test\",\n      nav2: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeckForm, {\n      OnClick: OnClick,\n      newDeckObject: newDeckObject,\n      editState: editState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditDeck, \"++CZqu2fMRmccp8t92M3k1lTJPk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n/**\n *   const [editedDeck, setEditedDeck] = useState({\n    id: deckId,\n    name: \"\",\n    description: \"\",\n  });\n */\n//setEditedDeck({ ...editedDeck, description: event.target.value });\n//async function loadDecks() {\n//const response = await fetch(\"http://localhost:5000/decks\");\n//const decksFromAPI = await response.json();\n//}\n//loadDecks();\n\n/* setEditState({\n      ...editState,\n      decks: decksFromAPI,\n      placeholderName: decksFromAPI[deckId - 1].name,\n      placeholderDescription: decksFromAPI[deckId - 1].description,\n    });*/\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.jsx"],"names":["React","Fragment","useEffect","useState","useHistory","useParams","readDeck","updateDeck","BreadcrumbBar","DeckForm","NavBar","EditDeck","OnClick","newDeckObject","params","deckId","history","editState","setEditState","decks","name","description","placeholderName","placeholderDescription","editedDeck","id","onSubmit","event","push","then","deck","OnCancel"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAlB,EAA8C;AAAA;;AAC5C,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,MAAM,GAAGD,MAAM,CAACC,MAAtB;AACA,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;AAEA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC;AACzCgB,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,WAAW,EAAE;AAAzB,KADkC;AAEzCC,IAAAA,eAAe,EAAE,YAFwB;AAGzCC,IAAAA,sBAAsB,EAAE,YAHiB;AAIzCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,EAAE,EAAEV,MADM;AAEVK,MAAAA,IAAI,EAAE,EAFI;AAGVC,MAAAA,WAAW,EAAE;AAHH;AAJ6B,GAAD,CAA1C;;AAWA,QAAMK,QAAQ,GAAIC,KAAD,IAAW;AAC1BpB,IAAAA,UAAU,CAACU,SAAS,CAACO,UAAX,CAAV;AACAR,IAAAA,OAAO,CAACY,IAAR,CAAc,UAASb,MAAO,EAA9B;AACD,GAHD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,CAACS,MAAD,CAAR,CAAiBc,IAAjB,CAAuBC,IAAD,IAAU;AAC9BZ,MAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEXK,QAAAA,eAAe,EAAEQ,IAAI,CAACV,IAFX;AAGXG,QAAAA,sBAAsB,EAAEO,IAAI,CAACT;AAHlB,OAAD,CAAZ;AAKD,KAND;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMU,QAAQ,GAAG,MAAM;AACrBf,IAAAA,OAAO,CAACY,IAAR,CAAc,UAASb,MAAO,EAA9B;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,IAAI,EAAEE,SAAS,CAACK,eADlB;AAEE,MAAA,KAAK,EAAE,MAFT;AAGE,MAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,QAAD;AACE,MAAA,OAAO,EAAEV,OADX;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,SAAS,EAAEI;AAHb;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAnDQN,Q;UACQN,S,EAECD,U;;;KAHTO,Q;AAqDT,eAAeA,QAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport BreadcrumbBar from \"./BreadcrumbBar\";\nimport DeckForm from \"./DeckForm\";\nimport NavBar from \"./NavBar\";\n\nfunction EditDeck({ OnClick, newDeckObject }) {\n  const params = useParams();\n  const deckId = params.deckId;\n  const history = useHistory();\n\n  const [editState, setEditState] = useState({\n    decks: { name: \"\", description: \"\" },\n    placeholderName: \"...loading\",\n    placeholderDescription: \"...loading\",\n    editedDeck: {\n      id: deckId,\n      name: \"\",\n      description: \"\",\n    },\n  });\n\n  const onSubmit = (event) => {\n    updateDeck(editState.editedDeck);\n    history.push(`/decks/${deckId}`);\n  };\n\n\n  useEffect(() => {\n    readDeck(deckId).then((deck) => {\n      setEditState({\n        ...editState,\n        placeholderName: deck.name,\n        placeholderDescription: deck.description,\n      });\n    });\n  }, []);\n\n  const OnCancel = () => {\n    history.push(`/decks/${deckId}`);\n  };\n\n  return (\n    <Fragment>\n      <BreadcrumbBar\n        nav1={editState.placeholderName}\n        link1={\"test\"}\n        nav2={\"Edit Deck\"}\n      />\n      <h2>Edit Deck</h2>\n      <DeckForm\n        OnClick={OnClick}\n        newDeckObject={newDeckObject}\n        editState={editState}\n      />\n    </Fragment>\n  );\n}\n\nexport default EditDeck;\n/**\n *   const [editedDeck, setEditedDeck] = useState({\n    id: deckId,\n    name: \"\",\n    description: \"\",\n  });\n */\n//setEditedDeck({ ...editedDeck, description: event.target.value });\n//async function loadDecks() {\n//const response = await fetch(\"http://localhost:5000/decks\");\n//const decksFromAPI = await response.json();\n//}\n//loadDecks();\n/* setEditState({\n      ...editState,\n      decks: decksFromAPI,\n      placeholderName: decksFromAPI[deckId - 1].name,\n      placeholderDescription: decksFromAPI[deckId - 1].description,\n    });*/\n"]},"metadata":{},"sourceType":"module"}