{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useParams, useRouteMatch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport DeckList from \"./DeckList\";\nimport Study from \"./Study\";\nimport EditDeck from \"./EditDeck\";\nimport AddCard from \"./AddCard\";\nimport EditCard from \"./EditCard\";\nimport { createDeck, deleteCard, deleteDeck } from \"../utils/api\";\nimport ViewDeck from \"./ViewDeck\";\nimport NewDeck from \"./NewDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [allDecks, setAllDecks] = useState({});\n  const [currentDeck, setCurrentDeck] = useState({});\n  const [newDeckObject, setNewDeckObject] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const [newCard, setNewCard] = useState({\n    front: \"\",\n    back: \"\"\n  });\n  const history = useHistory();\n  useEffect(() => {\n    setCurrentDeck({});\n  }, []); // button handler\n\n  const OnClick = event => {\n    const btnType = event.target.id;\n    const deckId = event.target.parentNode.id; //console.log(btnType, deckId);\n\n    if (btnType === \"viewDeck\") {\n      history.push(`/decks/${deckId}`);\n    }\n\n    if (btnType === \"studyDeck\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/study`);\n    }\n\n    if (btnType === \"cancelCreateDeck\") {\n      history.push(\"/\");\n    }\n\n    if (btnType === \"submitCreateDeck\") {\n      createDeck(newDeckObject).then(deck => history.push(`/decks/${deck.id}`));\n    }\n\n    if (btnType === \"addCards\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/cards/new`);\n    }\n\n    if (btnType === \"deleteCard\") {\n      const restart = window.confirm(\"Delete this card? \\n \\n You will not be able to recover it.\");\n\n      if (restart) {\n        deleteCard(event.target.parentNode.id);\n        history.go(0);\n      }\n    }\n\n    if (btnType === \"editDeck\") {\n      console.log(btnType, event.target.value);\n      history.push(`/decks/${event.target.value}/edit`);\n    }\n\n    if (btnType === \"cancelEditDeck\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/`);\n    }\n\n    if (btnType === \"doneAddCard\") {\n      history.push(\"/decks/:deckId/\");\n    }\n  }; //delete deck\n\n\n  const onDelete = event => {\n    const restart = window.confirm(\"Delete this deck? \\n \\n You will not be able to recover it.\");\n\n    if (restart) {\n      const deckIdToDelete = parseInt(event.target.parentNode.id);\n      deleteDeck(deckIdToDelete);\n      history.go(0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Home, {\n            OnClick: OnClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeckList, {\n            OnClick: OnClick,\n            allDecksWithCards: allDecks,\n            setAllDecksWithCards: setAllDecks,\n            onDelete: onDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/:cardId/edit\",\n          children: /*#__PURE__*/_jsxDEV(EditCard, {\n            OnClick: OnClick,\n            newCard: newCard,\n            setNewCard: setNewCard,\n            currentDeck: currentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/new\",\n          children: /*#__PURE__*/_jsxDEV(AddCard, {\n            OnClick: OnClick,\n            newCard: newCard,\n            setNewCard: setNewCard,\n            currentDeck: currentDeck,\n            setCurrentDeck: setCurrentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `/decks/new`,\n          children: /*#__PURE__*/_jsxDEV(CreateDeck, {\n            OnClick: OnClick,\n            newDeckObject: newDeckObject,\n            setNewDeckObject: setNewDeckObject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `/decks/:deckId/edit`,\n          children: /*#__PURE__*/_jsxDEV(EditDeck, {\n            OnClick: OnClick,\n            newDeckObject: newDeckObject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `/decks/:deckId/study`,\n          children: /*#__PURE__*/_jsxDEV(Study, {\n            currentDeck: currentDeck,\n            setCurrentDeck: setCurrentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId\",\n          children: /*#__PURE__*/_jsxDEV(ViewDeck, {\n            OnClick: OnClick,\n            currentDeck: currentDeck,\n            setCurrentDeck: setCurrentDeck,\n            onDelete: onDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"InZwgrdiyFDxsoIJea7AuFjie44=\", false, function () {\n  return [useHistory];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","Fragment","useEffect","useState","Route","Switch","useHistory","useParams","useRouteMatch","Header","NotFound","Home","CreateDeck","DeckList","Study","EditDeck","AddCard","EditCard","createDeck","deleteCard","deleteDeck","ViewDeck","NewDeck","Layout","allDecks","setAllDecks","currentDeck","setCurrentDeck","newDeckObject","setNewDeckObject","name","description","newCard","setNewCard","front","back","history","OnClick","event","btnType","target","id","deckId","parentNode","push","then","deck","restart","window","confirm","go","console","log","value","onDelete","deckIdToDelete","parseInt"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Route,\n  Switch,\n  useHistory,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport DeckList from \"./DeckList\";\nimport Study from \"./Study\";\nimport EditDeck from \"./EditDeck\";\nimport AddCard from \"./AddCard\";\nimport EditCard from \"./EditCard\";\nimport { createDeck, deleteCard, deleteDeck } from \"../utils/api\";\nimport ViewDeck from \"./ViewDeck\";\nimport NewDeck from \"./NewDeck\";\n\nfunction Layout() {\n  const [allDecks, setAllDecks] = useState({});\n  const [currentDeck, setCurrentDeck] = useState({});\n  const [newDeckObject, setNewDeckObject] = useState({\n    name: \"\",\n    description: \"\",\n  });\n  const [newCard, setNewCard] = useState({ front: \"\", back: \"\" });\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setCurrentDeck({});\n  }, []);\n\n  // button handler\n  const OnClick = (event) => {\n    const btnType = event.target.id;\n    const deckId = event.target.parentNode.id;\n    //console.log(btnType, deckId);\n    if (btnType === \"viewDeck\") {\n      history.push(`/decks/${deckId}`);\n    }\n    if (btnType === \"studyDeck\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/study`);\n    }\n    if (btnType === \"cancelCreateDeck\") {\n      history.push(\"/\");\n    }\n    if (btnType === \"submitCreateDeck\") {\n      createDeck(newDeckObject).then((deck) =>\n        history.push(`/decks/${deck.id}`)\n      );\n    }\n    if (btnType === \"addCards\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/cards/new`);\n    }\n    if (btnType === \"deleteCard\") {\n      const restart = window.confirm(\n        \"Delete this card? \\n \\n You will not be able to recover it.\"\n      );\n      if (restart) {\n        deleteCard(event.target.parentNode.id);\n        history.go(0);\n      }\n    }\n    if (btnType === \"editDeck\") {\n      console.log(btnType, event.target.value);\n      history.push(`/decks/${event.target.value}/edit`);\n    }\n    if (btnType === \"cancelEditDeck\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/`);\n    }\n    if (btnType === \"doneAddCard\") {\n      history.push(\"/decks/:deckId/\");\n    }\n  };\n\n  //delete deck\n  const onDelete = (event) => {\n    const restart = window.confirm(\n      \"Delete this deck? \\n \\n You will not be able to recover it.\"\n    );\n    if (restart) {\n      const deckIdToDelete = parseInt(event.target.parentNode.id);\n      deleteDeck(deckIdToDelete);\n      history.go(0);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Header />\n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n        <Switch>\n          {/* HOME */}\n          <Route exact={true} path=\"/\">\n            <Home OnClick={OnClick} />\n            <DeckList\n              OnClick={OnClick}\n              allDecksWithCards={allDecks}\n              setAllDecksWithCards={setAllDecks}\n              onDelete={onDelete}\n            />\n          </Route>\n          {/* EDIT CARD */}\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <EditCard\n              OnClick={OnClick}\n              newCard={newCard}\n              setNewCard={setNewCard}\n              currentDeck={currentDeck}\n            />\n          </Route>\n          {/* ADD CARD */}\n          <Route path=\"/decks/:deckId/cards/new\">\n            <AddCard\n              OnClick={OnClick}\n              newCard={newCard}\n              setNewCard={setNewCard}\n              currentDeck={currentDeck}\n              setCurrentDeck={setCurrentDeck}\n            />\n          </Route>\n          {/* NEW DECK */}\n          <Route path={`/decks/new`}>\n            <CreateDeck\n              OnClick={OnClick}\n              newDeckObject={newDeckObject}\n              setNewDeckObject={setNewDeckObject}\n            />\n          </Route>\n          {/* EDIT DECK */}\n          <Route path={`/decks/:deckId/edit`}>\n            <EditDeck OnClick={OnClick} newDeckObject={newDeckObject} />\n          </Route>\n          {/* STUDY DECK */}\n          <Route path={`/decks/:deckId/study`}>\n            <Study currentDeck={currentDeck} setCurrentDeck={setCurrentDeck} />\n          </Route>\n          {/* VIEW DECK */}\n          <Route path=\"/decks/:deckId\">\n            <ViewDeck\n              OnClick={OnClick}\n              currentDeck={currentDeck}\n              setCurrentDeck={setCurrentDeck}\n              onDelete={onDelete}\n            />\n          </Route>\n\n          {/* NOT FOUND */}\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}