{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useParams, useRouteMatch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport DeckList from \"./DeckList\";\nimport Study from \"./Study\";\nimport NavBar from \"./NavBar\";\nimport CurrentDeck from \"./CurrentDeck\";\nimport EditDeck from \"./EditDeck\";\nimport AddCard from \"./AddCard\";\nimport EditCard from \"./EditCard\";\nimport { createDeck, deleteDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [newDeckName, setNewDeckName] = useState(\"\");\n  const [newDeckDescription, setNewDeckDescription] = useState(\"\");\n  const [allDecksWithCards, setAllDecksWithCards] = useState({});\n  const [currentDeck, setCurrentDeck] = useState({});\n  const [currentCardsArray, setCurrentCardsArray] = useState({});\n  const [deckLength, setDeckLength] = useState(0);\n  const [newDeckObject, setNewDeckObject] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const [newCard, setNewCard] = useState({\n    front: \"\",\n    back: \"\"\n  });\n  const history = useHistory(); //\n\n  const [decks, setDecks] = useState({}); //load decks\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDecks() {\n      try {\n        const response = await fetch(`http://localhost:5000/decks`, {\n          signal: abortController.signal\n        });\n        const decksFromAPI = await response.json();\n        setDecks(decksFromAPI);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted loadDecks\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDecks();\n    return () => abortController.abort();\n  }, [decks]);\n\n  const handleSubmit = event => {\n    console.log(\"name:\", newDeckName, \"desc\", newDeckDescription);\n    setNewDeckObject({\n      name: newDeckName,\n      description: newDeckDescription\n    });\n    console.log(\"HERE\", newDeckObject);\n    createDeck(newDeckObject);\n  };\n\n  const handleDelete = event => {\n    const deckIdToDelete = event.target.parentNode.id;\n    deleteDeck(deckIdToDelete);\n    history.go(\"/\");\n  };\n\n  const OnClick = event => {\n    const btnType = event.target.id;\n    const deckId = event.target.parentNode.id;\n    console.log(btnType);\n\n    if (btnType === \"viewDeck\") {\n      history.push(`/decks/${deckId}`);\n    }\n\n    if (btnType === \"studyDeck\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/study`);\n    }\n\n    if (btnType === \"deleteDeck\") {\n      handleDelete(event);\n    }\n\n    if (btnType === \"cancelCreateDeck\") {\n      history.push(\"/\");\n    }\n\n    if (btnType === \"submitCreateDeck\") {\n      // take values and make put request\n      handleSubmit(event);\n      history.push(\"/\");\n    }\n\n    if (btnType === \"addCards\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/cards/new`);\n    }\n\n    if (btnType === \"editDeck\") {\n      history.push(\"/decks/:deckId/edit\"); //updateDeck();\n    }\n\n    if (btnType === \"cancelEditDeck\") {\n      history.push(\"/decks/:deckId/\");\n    }\n\n    if (btnType === \"doneAddCard\") {\n      history.push(\"/decks/:deckId/\");\n    }\n\n    if (btnType === \"saveAddCard\") {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Home, {\n            OnClick: OnClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeckList, {\n            OnClick: OnClick,\n            allDecksWithCards: allDecksWithCards,\n            setAllDecksWithCards: setAllDecksWithCards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/new\",\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateDeck, {\n            OnClick: OnClick,\n            newDeckName: newDeckName,\n            setNewDeckName: setNewDeckName,\n            newDeckDescription: newDeckDescription,\n            setNewDeckDescription: setNewDeckDescription,\n            newDeckObject: newDeckObject,\n            setNewDeckObject: setNewDeckObject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/:cardId/edit\",\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditCard, {\n            OnClick: OnClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/edit\",\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditDeck, {\n            OnClick: OnClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/study\",\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Study, {\n            OnClick: OnClick,\n            setCurrentDeck: setCurrentDeck,\n            currentDeck: currentDeck //deckLength={deckLength}\n            //setDeckLength={setDeckLength}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/new\",\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddCard, {\n            OnClick: OnClick,\n            newCard: newCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId\",\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrentDeck, {\n            OnClick: OnClick,\n            currentDeck: currentDeck,\n            currentCardsArray: currentCardsArray,\n            setCurrentDeck: setCurrentDeck,\n            setCurrentCardsArray: setCurrentCardsArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"NoF6QEj5PRf5LMctcjc4Hx94b1U=\", false, function () {\n  return [useHistory];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","Fragment","useEffect","useState","Route","Switch","useHistory","useParams","useRouteMatch","Header","NotFound","Home","CreateDeck","DeckList","Study","NavBar","CurrentDeck","EditDeck","AddCard","EditCard","createDeck","deleteDeck","Layout","newDeckName","setNewDeckName","newDeckDescription","setNewDeckDescription","allDecksWithCards","setAllDecksWithCards","currentDeck","setCurrentDeck","currentCardsArray","setCurrentCardsArray","deckLength","setDeckLength","newDeckObject","setNewDeckObject","name","description","newCard","setNewCard","front","back","history","decks","setDecks","abortController","AbortController","loadDecks","response","fetch","signal","decksFromAPI","json","error","console","log","abort","handleSubmit","event","handleDelete","deckIdToDelete","target","parentNode","id","go","OnClick","btnType","deckId","push"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Route,\n  Switch,\n  useHistory,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport DeckList from \"./DeckList\";\nimport Study from \"./Study\";\nimport NavBar from \"./NavBar\";\nimport CurrentDeck from \"./CurrentDeck\";\nimport EditDeck from \"./EditDeck\";\nimport AddCard from \"./AddCard\";\nimport EditCard from \"./EditCard\";\nimport { createDeck, deleteDeck } from \"../utils/api\";\n\nfunction Layout() {\n  const [newDeckName, setNewDeckName] = useState(\"\");\n  const [newDeckDescription, setNewDeckDescription] = useState(\"\");\n  const [allDecksWithCards, setAllDecksWithCards] = useState({});\n  const [currentDeck, setCurrentDeck] = useState({});\n  const [currentCardsArray, setCurrentCardsArray] = useState({});\n  const [deckLength, setDeckLength] = useState(0);\n  const [newDeckObject, setNewDeckObject] = useState({\n    name: \"\",\n    description: \"\",\n  });\n  const [newCard, setNewCard] = useState({ front: \"\", back: \"\" });\n\n  const history = useHistory();\n  //\n  const [decks, setDecks] = useState({});\n\n  //load decks\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function loadDecks() {\n      try {\n        const response = await fetch(`http://localhost:5000/decks`, {\n          signal: abortController.signal,\n        });\n        const decksFromAPI = await response.json();\n        setDecks(decksFromAPI);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted loadDecks\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadDecks();\n\n    return () => abortController.abort();\n  }, [decks]);\n\n  const handleSubmit = (event) => {\n    console.log(\"name:\", newDeckName, \"desc\", newDeckDescription);\n    setNewDeckObject({ name: newDeckName, description: newDeckDescription });\n    console.log(\"HERE\", newDeckObject);\n    createDeck(newDeckObject);\n  };\n\n  const handleDelete = (event) => {\n    const deckIdToDelete = event.target.parentNode.id;\n    deleteDeck(deckIdToDelete);\n    history.go(\"/\");\n  };\n\n  const OnClick = (event) => {\n    const btnType = event.target.id;\n    const deckId = event.target.parentNode.id;\n    console.log(btnType);\n    if (btnType === \"viewDeck\") {\n      history.push(`/decks/${deckId}`);\n    }\n    if (btnType === \"studyDeck\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/study`);\n    }\n    if (btnType === \"deleteDeck\") {\n      handleDelete(event);\n    }\n    if (btnType === \"cancelCreateDeck\") {\n      history.push(\"/\");\n    }\n    if (btnType === \"submitCreateDeck\") {\n      // take values and make put request\n      handleSubmit(event);\n      history.push(\"/\");\n    }\n    if (btnType === \"addCards\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/cards/new`);\n    }\n    if (btnType === \"editDeck\") {\n      history.push(\"/decks/:deckId/edit\");\n      //updateDeck();\n    }\n    if (btnType === \"cancelEditDeck\") {\n      history.push(\"/decks/:deckId/\");\n    }\n    if (btnType === \"doneAddCard\") {\n      history.push(\"/decks/:deckId/\");\n    }\n    if (btnType === \"saveAddCard\") {\n    }\n  };\n\n  return (\n    <Fragment>\n      <Header />\n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <Home OnClick={OnClick} />\n            <DeckList\n              OnClick={OnClick}\n              allDecksWithCards={allDecksWithCards}\n              setAllDecksWithCards={setAllDecksWithCards}\n            />\n          </Route>\n          <Route path=\"/decks/new\">\n            <NavBar />\n            <CreateDeck\n              OnClick={OnClick}\n              newDeckName={newDeckName}\n              setNewDeckName={setNewDeckName}\n              newDeckDescription={newDeckDescription}\n              setNewDeckDescription={setNewDeckDescription}\n              newDeckObject={newDeckObject}\n              setNewDeckObject={setNewDeckObject}\n            />\n          </Route>\n\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <NavBar />\n            <EditCard OnClick={OnClick} />\n          </Route>\n          <Route path=\"/decks/:deckId/edit\">\n            <NavBar />\n            <EditDeck OnClick={OnClick} />\n          </Route>\n          <Route path=\"/decks/:deckId/study\">\n            <NavBar />\n            <Study\n              OnClick={OnClick}\n              setCurrentDeck={setCurrentDeck}\n              currentDeck={currentDeck}\n              //deckLength={deckLength}\n              //setDeckLength={setDeckLength}\n            />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/new\">\n            <NavBar />\n            <AddCard OnClick={OnClick} newCard={newCard} />\n          </Route>\n          <Route path=\"/decks/:deckId\">\n            <NavBar />\n            <CurrentDeck\n              OnClick={OnClick}\n              currentDeck={currentDeck}\n              currentCardsArray={currentCardsArray}\n              setCurrentDeck={setCurrentDeck}\n              setCurrentCardsArray={setCurrentCardsArray}\n            />\n          </Route>\n\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}