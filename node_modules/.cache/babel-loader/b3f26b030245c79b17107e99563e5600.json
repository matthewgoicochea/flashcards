{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport BreadcrumbBar from \"./BreadcrumbBar\";\nimport DeckForm from \"./DeckForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  OnClick,\n  newDeckObject\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const history = useHistory();\n  const [editState, setEditState] = useState({\n    decks: {\n      name: \"\",\n      description: \"\"\n    },\n    placeholderName: \"...loading\",\n    placeholderDescription: \"...loading\",\n    editedDeck: {\n      id: deckId,\n      name: \"\",\n      description: \"\"\n    }\n  });\n\n  const onCancel = () => {\n    history.push(`/decks/${deckId}`);\n  };\n\n  const onSubmit = event => {\n    updateDeck(editState.editedDeck);\n    history.push(`/decks/${deckId}`);\n  };\n\n  useEffect(() => {\n    async function loadDeck() {\n      readDeck(deckId).then(deck => {\n        setEditState({ ...editState,\n          placeholderName: deck.name,\n          placeholderDescription: deck.description\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadcrumbBar, {\n      nav1: editState.placeholderName,\n      link1: \"test\",\n      nav2: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeckForm, {\n      OnClick: OnClick,\n      newDeckObject: newDeckObject,\n      editState: editState,\n      setEditState: setEditState,\n      onCancel: onCancel,\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditDeck, \"++CZqu2fMRmccp8t92M3k1lTJPk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.jsx"],"names":["React","useEffect","useState","useHistory","useParams","readDeck","updateDeck","BreadcrumbBar","DeckForm","EditDeck","OnClick","newDeckObject","params","deckId","history","editState","setEditState","decks","name","description","placeholderName","placeholderDescription","editedDeck","id","onCancel","push","onSubmit","event","loadDeck","then","deck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAlB,EAA8C;AAAA;;AAC5C,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,MAAM,GAAGD,MAAM,CAACC,MAAtB;AACA,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC;AACzCe,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,WAAW,EAAE;AAAzB,KADkC;AAEzCC,IAAAA,eAAe,EAAE,YAFwB;AAGzCC,IAAAA,sBAAsB,EAAE,YAHiB;AAIzCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,EAAE,EAAEV,MADM;AAEVK,MAAAA,IAAI,EAAE,EAFI;AAGVC,MAAAA,WAAW,EAAE;AAHH;AAJ6B,GAAD,CAA1C;;AAWA,QAAMK,QAAQ,GAAG,MAAM;AACrBV,IAAAA,OAAO,CAACW,IAAR,CAAc,UAASZ,MAAO,EAA9B;AACD,GAFD;;AAIA,QAAMa,QAAQ,GAAIC,KAAD,IAAW;AAC1BrB,IAAAA,UAAU,CAACS,SAAS,CAACO,UAAX,CAAV;AACAR,IAAAA,OAAO,CAACW,IAAR,CAAc,UAASZ,MAAO,EAA9B;AACD,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe2B,QAAf,GAA0B;AACxBvB,MAAAA,QAAQ,CAACQ,MAAD,CAAR,CAAiBgB,IAAjB,CAAuBC,IAAD,IAAU;AAC9Bd,QAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEXK,UAAAA,eAAe,EAAEU,IAAI,CAACZ,IAFX;AAGXG,UAAAA,sBAAsB,EAAES,IAAI,CAACX;AAHlB,SAAD,CAAZ;AAKD,OAND;AAOD;AACF,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,IAAI,EAAEJ,SAAS,CAACK,eADlB;AAEE,MAAA,KAAK,EAAE,MAFT;AAGE,MAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,QAAD;AACE,MAAA,OAAO,EAAEV,OADX;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,SAAS,EAAEI,SAHb;AAIE,MAAA,YAAY,EAAEC,YAJhB;AAKE,MAAA,QAAQ,EAAEQ,QALZ;AAME,MAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAkBD;;GAvDQjB,Q;UACQL,S,EAECD,U;;;KAHTM,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport BreadcrumbBar from \"./BreadcrumbBar\";\nimport DeckForm from \"./DeckForm\";\n\nfunction EditDeck({ OnClick, newDeckObject }) {\n  const params = useParams();\n  const deckId = params.deckId;\n  const history = useHistory();\n\n  const [editState, setEditState] = useState({\n    decks: { name: \"\", description: \"\" },\n    placeholderName: \"...loading\",\n    placeholderDescription: \"...loading\",\n    editedDeck: {\n      id: deckId,\n      name: \"\",\n      description: \"\",\n    },\n  });\n\n  const onCancel = () => {\n    history.push(`/decks/${deckId}`);\n  };\n\n  const onSubmit = (event) => {\n    updateDeck(editState.editedDeck);\n    history.push(`/decks/${deckId}`);\n  };\n\n  useEffect(() => {\n    async function loadDeck() {\n      readDeck(deckId).then((deck) => {\n        setEditState({\n          ...editState,\n          placeholderName: deck.name,\n          placeholderDescription: deck.description,\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <BreadcrumbBar\n        nav1={editState.placeholderName}\n        link1={\"test\"}\n        nav2={\"Edit Deck\"}\n      />\n      <h2>Edit Deck</h2>\n      <DeckForm\n        OnClick={OnClick}\n        newDeckObject={newDeckObject}\n        editState={editState}\n        setEditState={setEditState}\n        onCancel={onCancel}\n        onSubmit={onSubmit}\n      />\n    </>\n  );\n}\n\nexport default EditDeck;\n"]},"metadata":{},"sourceType":"module"}