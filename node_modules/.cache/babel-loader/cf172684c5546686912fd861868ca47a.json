{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/TestDeck.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TestDeck() {\n  _s();\n\n  const [testDecks, setTestDecks] = useState({});\n  useEffect(() => {\n    async function loadDecks() {\n      const response = await fetch(\"http://localhost:5000/decks\");\n      const testDecksFromAPI = await response.json();\n      setTestDecks(testDecksFromAPI);\n    }\n\n    loadDecks();\n  }, []);\n  const decksArray = Array.from(testDecks);\n  const totalCards = decksArray.map(deck => deck.id).length;\n  const deckTitle = decksArray.map(deck => deck.name);\n\n  const deckOne = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: deckTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [totalCards, \" CARDDS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: \"Test text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n\n  function NewDeck({\n    OnClick\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: deckTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [totalCards, \" cards\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"Test text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"deckOne\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewDeck, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TestDeck, \"eUx7/WWgA1Rn4ZCuaSPM8GrghcE=\");\n\n_c = TestDeck;\nexport default TestDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestDeck\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/TestDeck.jsx"],"names":["React","Fragment","useEffect","useState","TestDeck","testDecks","setTestDecks","loadDecks","response","fetch","testDecksFromAPI","json","decksArray","Array","from","totalCards","map","deck","id","length","deckTitle","name","deckOne","NewDeck","OnClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeK,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMC,gBAAgB,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA/B;AACAL,MAAAA,YAAY,CAACI,gBAAD,CAAZ;AACD;;AACDH,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AASA,QAAMK,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWT,SAAX,CAAnB;AACA,QAAMU,UAAU,GAAGH,UAAU,CAACI,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACC,EAA9B,EAAkCC,MAArD;AACA,QAAMC,SAAS,GAAGR,UAAU,CAACI,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACI,IAA9B,CAAlB;;AAEA,QAAMC,OAAO,GAAG,mBACd;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4BF;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAIL,UAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,WAASQ,OAAT,CAAiB;AAAEC,IAAAA;AAAF,GAAjB,EAA8B;AAC5B,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BJ;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAIL,UAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA7CQX,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n\nfunction TestDeck() {\n  const [testDecks, setTestDecks] = useState({});\n\n  useEffect(() => {\n    async function loadDecks() {\n      const response = await fetch(\"http://localhost:5000/decks\");\n      const testDecksFromAPI = await response.json();\n      setTestDecks(testDecksFromAPI);\n    }\n    loadDecks();\n  }, []);\n\n  const decksArray = Array.from(testDecks);\n  const totalCards = decksArray.map((deck) => deck.id).length;\n  const deckTitle = decksArray.map((deck) => deck.name);\n\n  const deckOne = () => (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{deckTitle}</h5>\n        <p>{totalCards} CARDDS</p>\n        <p className=\"card-text\">Test text</p>\n      </div>\n    </div>\n  );\n\n  function NewDeck({ OnClick }) {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{deckTitle}</h5>\n          <p>{totalCards} cards</p>\n          <p className=\"card-text\">Test text</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <h1>TEST</h1>\n      <deckOne />\n      <NewDeck />\n    </Fragment>\n  );\n}\n\nexport default TestDeck;\n"]},"metadata":{},"sourceType":"module"}