{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/DeckList.jsx\";\nimport React, { useEffect, Fragment } from \"react\"; //import NewDeck from \"./NewDeck\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckList({\n  OnClick,\n  setAllDecks,\n  allDecks,\n  allDecksWithCards,\n  setAllDecksWithCards\n}) {\n  //const deckList = [<NewDeck />];\n\n  /*\n   useEffect(() => {\n     async function loadAllDecks() {\n       const response = await fetch(\"http://localhost:5000/decks\");\n       const allDecksFromAPI = await response.json();\n       setAllDecks(allDecksFromAPI);\n     }\n     loadAllDecks();\n   }, []);\n   //may have to change dependency\n    //add info to decks array\n    //const allDecksArray = Array.from(allDecks);\n   const newAllDecksArray = Array.from(allDecksWithCards);\n    useEffect(() => {\n     async function loadDecksWithCards() {\n       const response = await fetch(`http://localhost:5000/decks?_embed=cards`);\n       const allDecksWithCardsFromAPI = await response.json();\n       setAllDecksWithCards(allDecksWithCardsFromAPI);\n     }\n     loadDecksWithCards();\n   }, []);\n    //console.log(\"HERE:\", allDecksWithCards);\n    function createCardForDeck(name, description, id, cardsNum) {\n     console.log(\"num:\", cardsNum);\n     return (\n       <Fragment>\n         <li className=\"list-group-item\">\n           <div className=\"card border-0\">\n             <div className=\"card-body\" id={id}>\n               <h5 className=\"card-title\">{name}</h5>\n               <p>{`${cardsNum} cards`}</p>\n               <p className=\"card-text\">{description}</p>\n               <button\n                 to=\"/\"\n                 className=\"btn btn-secondary\"\n                 id=\"viewDeck\"\n                 onClick={OnClick}\n               >\n                 View\n               </button>\n               <button\n                 to=\"/\"\n                 className=\"btn btn-primary\"\n                 id=\"studyDeck\"\n                 onClick={OnClick}\n               >\n                 Study\n               </button>\n               <button\n                 to=\"/\"\n                 className=\"btn btn-danger\"\n                 id=\"deleteDeck\"\n                 onClick={OnClick}\n               >\n                 Delete\n               </button>\n             </div>\n           </div>\n         </li>\n       </Fragment>\n     );\n   }\n  \t/*\n   const listItems = allDecksArray.map((deck) =>\n     createCardForDeck(deck.name, deck.description, deck.id)\n   );*/\n  const newListItems = newAllDecksArray.map(deck => createCardForDeck(deck.name, deck.description, deck.id, deck.cards.length));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: newListItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DeckList;\nexport default DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/DeckList.jsx"],"names":["React","useEffect","Fragment","DeckList","OnClick","setAllDecks","allDecks","allDecksWithCards","setAllDecksWithCards","newListItems","newAllDecksArray","map","deck","createCardForDeck","name","description","id","cards","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;;;AAEA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,OADgB;AAEhBC,EAAAA,WAFgB;AAGhBC,EAAAA,QAHgB;AAIhBC,EAAAA,iBAJgB;AAKhBC,EAAAA;AALgB,CAAlB,EAMG;AACD;;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQE,QAAMC,YAAY,GAAGC,gBAAgB,CAACC,GAAjB,CAAsBC,IAAD,IACxCC,iBAAiB,CAACD,IAAI,CAACE,IAAN,EAAYF,IAAI,CAACG,WAAjB,EAA8BH,IAAI,CAACI,EAAnC,EAAuCJ,IAAI,CAACK,KAAL,CAAWC,MAAlD,CADE,CAArB;AAIA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BT;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KA3FQN,Q;AA6FT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\n//import NewDeck from \"./NewDeck\";\n\nfunction DeckList({\n  OnClick,\n  setAllDecks,\n  allDecks,\n  allDecksWithCards,\n  setAllDecksWithCards,\n}) {\n  //const deckList = [<NewDeck />];\n\n\t/*\n  useEffect(() => {\n    async function loadAllDecks() {\n      const response = await fetch(\"http://localhost:5000/decks\");\n      const allDecksFromAPI = await response.json();\n      setAllDecks(allDecksFromAPI);\n    }\n    loadAllDecks();\n  }, []);\n  //may have to change dependency\n\n  //add info to decks array\n\n  //const allDecksArray = Array.from(allDecks);\n  const newAllDecksArray = Array.from(allDecksWithCards);\n\n  useEffect(() => {\n    async function loadDecksWithCards() {\n      const response = await fetch(`http://localhost:5000/decks?_embed=cards`);\n      const allDecksWithCardsFromAPI = await response.json();\n      setAllDecksWithCards(allDecksWithCardsFromAPI);\n    }\n    loadDecksWithCards();\n  }, []);\n\n  //console.log(\"HERE:\", allDecksWithCards);\n\n  function createCardForDeck(name, description, id, cardsNum) {\n    console.log(\"num:\", cardsNum);\n    return (\n      <Fragment>\n        <li className=\"list-group-item\">\n          <div className=\"card border-0\">\n            <div className=\"card-body\" id={id}>\n              <h5 className=\"card-title\">{name}</h5>\n              <p>{`${cardsNum} cards`}</p>\n              <p className=\"card-text\">{description}</p>\n              <button\n                to=\"/\"\n                className=\"btn btn-secondary\"\n                id=\"viewDeck\"\n                onClick={OnClick}\n              >\n                View\n              </button>\n              <button\n                to=\"/\"\n                className=\"btn btn-primary\"\n                id=\"studyDeck\"\n                onClick={OnClick}\n              >\n                Study\n              </button>\n              <button\n                to=\"/\"\n                className=\"btn btn-danger\"\n                id=\"deleteDeck\"\n                onClick={OnClick}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </li>\n      </Fragment>\n    );\n  }\n\n\t/*\n  const listItems = allDecksArray.map((deck) =>\n    createCardForDeck(deck.name, deck.description, deck.id)\n  );*/\n\n  const newListItems = newAllDecksArray.map((deck) =>\n    createCardForDeck(deck.name, deck.description, deck.id, deck.cards.length)\n  );\n\n  return (\n    <Fragment>\n      <ul className=\"list-group\">{newListItems}</ul>\n    </Fragment>\n  );\n}\n\nexport default DeckList;\n"]},"metadata":{},"sourceType":"module"}