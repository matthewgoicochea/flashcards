{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { readCard, readDeck, updateCard } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  OnClick\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const cardId = params.cardId;\n  const [editCardState, setEditCardState] = useState({\n    card: {\n      front: \"\",\n      back: \"\"\n    },\n    deckId: 0,\n    deckName: \"\"\n  });\n  useEffect(() => {\n    const deck = readDeck(deckId).then(deck => setEditCardState({ ...editCardState,\n      deckId: deck.id,\n      deckName: deck.name\n    }));\n    const card = readCard(cardId).then(card => setEditCardState({ ...editCardState,\n      card: {\n        front: card.front,\n        back: card.back\n      },\n      id: card.id\n    }));\n  }, []);\n\n  const handleChange = event => {\n    if (event.target.parentNode.innerText === \"Front\") {\n      setEditCardState({ ...editCardState,\n        cardfront: \" \",\n        front: event.target.value\n      });\n    }\n\n    if (event.target.parentNode.innerText === \"Back\") {\n      setEditCardState({ ...editCardState,\n        back: event.target.value\n      });\n    }\n  };\n\n  const onDone = () => {};\n\n  const onSubmit = () => {\n    updateCard(editCardState.card);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Edit Card: \", editCardState.deckName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"exampleFormControlTextarea1\",\n        class: \"form-label\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"2\",\n        placeholder: editCardState.front,\n        value: editCardState.front,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"exampleFormControlTextarea1\",\n        class: \"form-label\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"2\",\n        placeholder: editCardState.back,\n        value: editCardState.back,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary\",\n      id: \"doneEditCard\",\n      onClick: onDone,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      id: \"submitEditCard\",\n      onClick: onSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditCard, \"gDcRmf74QJlmCFkfzQNLSg8hHG4=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditCard.jsx"],"names":["React","Fragment","useEffect","useState","useParams","readCard","readDeck","updateCard","EditCard","OnClick","params","deckId","cardId","editCardState","setEditCardState","card","front","back","deckName","deck","then","id","name","handleChange","event","target","parentNode","innerText","cardfront","value","onDone","onSubmit"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { readCard, readDeck, updateCard } from \"../utils/api\";\n\nfunction EditCard({ OnClick }) {\n  const params = useParams();\n  const deckId = params.deckId;\n  const cardId = params.cardId;\n\n  const [editCardState, setEditCardState] = useState({\n    card: { front: \"\", back: \"\" },\n    deckId: 0,\n    deckName: \"\",\n  });\n\n  useEffect(() => {\n    const deck = readDeck(deckId).then((deck) =>\n      setEditCardState({\n        ...editCardState,\n        deckId: deck.id,\n        deckName: deck.name,\n      })\n    );\n    const card = readCard(cardId).then((card) =>\n      setEditCardState({\n        ...editCardState,\n        card: { front: card.front, back: card.back },\n        id: card.id,\n      })\n    );\n  }, []);\n\n  const handleChange = (event) => {\n    if (event.target.parentNode.innerText === \"Front\") {\n      setEditCardState({ ...editCardState, cardfront: \" \", front: event.target.value });\n    }\n    if (event.target.parentNode.innerText === \"Back\") {\n      setEditCardState({ ...editCardState, back: event.target.value });\n    }\n  };\n\n  const onDone = () => {};\n\n  const onSubmit = () => {\n    updateCard(editCardState.card);\n  };\n\n  return (\n    <Fragment>\n      <h3>Edit Card: {editCardState.deckName}</h3>\n      <div class=\"mb-3\">\n        <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n          Front\n        </label>\n        <textarea\n          class=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"2\"\n          placeholder={editCardState.front}\n          value={editCardState.front}\n          onChange={handleChange}\n        ></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n          Back\n        </label>\n        <textarea\n          class=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"2\"\n          placeholder={editCardState.back}\n          value={editCardState.back}\n          onChange={handleChange}\n        ></textarea>\n      </div>\n      <button className=\"btn btn-secondary\" id=\"doneEditCard\" onClick={onDone}>\n        Done\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        id=\"submitEditCard\"\n        onClick={onSubmit}\n      >\n        Submit\n      </button>\n    </Fragment>\n  );\n}\n\nexport default EditCard;\n"]},"metadata":{},"sourceType":"module"}