{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/DeckList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport NewDeck from \"./NewDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckList({\n  OnClick\n}) {\n  _s();\n\n  const deckList = [/*#__PURE__*/_jsxDEV(NewDeck, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 21\n  }, this), /*#__PURE__*/_jsxDEV(NewDeck, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 34\n  }, this), /*#__PURE__*/_jsxDEV(NewDeck, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 47\n  }, this)];\n  useEffect(() => {\n    async function loadDecks() {\n      const response = await fetch(`http://localhost:5000/decks`);\n      const decksFromAPI = response.json();\n    }\n  });\n  return deckList;\n}\n\n_s(DeckList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DeckList;\nexport default DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/DeckList.jsx"],"names":["React","useEffect","NewDeck","DeckList","OnClick","deckList","loadDecks","response","fetch","decksFromAPI","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAC7B,QAAMC,QAAQ,GAAG,cAAC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAD,eAAc,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAd,eAA2B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA3B,CAAjB;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AAChB,mBAAeK,SAAf,GAA2B;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAAF,CAA5B;AACH,YAAMC,YAAY,GAAGF,QAAQ,CAACG,IAAT,EAArB;AAEA;AACD,GANS,CAAT;AASA,SAAOL,QAAP;AACD;;GAfQF,Q;;KAAAA,Q;AAiBT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport NewDeck from \"./NewDeck\";\n\nfunction DeckList({ OnClick }) {\n  const deckList = [<NewDeck />, <NewDeck />, <NewDeck />];\n\n\t\n\n  useEffect(() => {\n\t\tasync function loadDecks() {\n      const response = await fetch(`http://localhost:5000/decks`);\n\t\t\tconst decksFromAPI = response.json();\n\n\t\t}\n\t})\n\n\n  return deckList;\n}\n\nexport default DeckList;\n"]},"metadata":{},"sourceType":"module"}