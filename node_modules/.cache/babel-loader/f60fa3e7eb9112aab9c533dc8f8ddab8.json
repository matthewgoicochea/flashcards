{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { readCard, readDeck, updateCard } from \"../utils/api\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  OnClick\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const cardId = params.cardId;\n  const [editCardState, setEditCardState] = useState({\n    card: {\n      front: \"\",\n      back: \"\"\n    }\n  });\n  useEffect(() => {\n    async function loadPage() {\n      const deck = await readDeck(deckId).then(deck => {\n        console.log(deck);\n        setEditCardState({ ...editCardState,\n          deckName: deck.name,\n          cards: deck.cards,\n          id: deck.id\n        });\n      });\n      readCard(editCardState.card);\n    }\n  }, []);\n  useEffect(() => {\n    /*const card = readCard(cardId).then((card) => {\n      setEditCardState({\n        ...editCardState,\n        front: card.front,\n        back: card.back,\n        id: card.id,\n        deckId: card.deckId,\n      });\n    });*/\n  }, []);\n\n  const handleChange = event => {\n    if (event.target.parentNode.innerText === \"Front\") {\n      setEditCardState({ ...editCardState,\n        front: event.target.value\n      });\n    }\n\n    if (event.target.parentNode.innerText === \"Back\") {\n      setEditCardState({ ...editCardState,\n        back: event.target.value\n      });\n    }\n  };\n\n  const onDone = () => {\n    console.log(editCardState.deckName);\n  };\n\n  const onSubmit = () => {\n    updateCard(editCardState.card);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      deckName: editCardState.deckName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-2\",\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"exampleFormControlTextarea1\",\n        class: \"form-label\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"2\",\n        placeholder: editCardState.front,\n        value: editCardState.front,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"exampleFormControlTextarea1\",\n        class: \"form-label\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"2\",\n        placeholder: editCardState.back,\n        value: editCardState.back,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mr-2\",\n      id: \"doneEditCard\",\n      onClick: onDone,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      id: \"submitEditCard\",\n      onClick: onSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditCard, \"2Yc2xPRdbVdulepEKoGAM1QlI+w=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditCard.jsx"],"names":["React","Fragment","useEffect","useState","useParams","readCard","readDeck","updateCard","NavBar","EditCard","OnClick","params","deckId","cardId","editCardState","setEditCardState","card","front","back","loadPage","deck","then","console","log","deckName","name","cards","id","handleChange","event","target","parentNode","innerText","value","onDone","onSubmit"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { readCard, readDeck, updateCard } from \"../utils/api\";\nimport NavBar from \"./NavBar\";\n\nfunction EditCard({ OnClick }) {\n  const params = useParams();\n  const deckId = params.deckId;\n  const cardId = params.cardId;\n\n  const [editCardState, setEditCardState] = useState({\n    card: { front: \"\", back: \"\" },\n  });\n\n  useEffect(() => {\n    async function loadPage() {\n\t\tconst deck = await readDeck(deckId).then((deck) => {\n      console.log(deck);\n      setEditCardState({\n        ...editCardState,\n        deckName: deck.name,\n        cards: deck.cards,\n        id: deck.id,\n      });\n    });\n\n\t\treadCard(editCardState.card)\n\t}\n\n  }, []);\n\n  useEffect(() => {\n    /*const card = readCard(cardId).then((card) => {\n      setEditCardState({\n        ...editCardState,\n        front: card.front,\n        back: card.back,\n        id: card.id,\n        deckId: card.deckId,\n      });\n    });*/\n  }, []);\n\n  const handleChange = (event) => {\n    if (event.target.parentNode.innerText === \"Front\") {\n      setEditCardState({ ...editCardState, front: event.target.value });\n    }\n    if (event.target.parentNode.innerText === \"Back\") {\n      setEditCardState({ ...editCardState, back: event.target.value });\n    }\n  };\n\n  const onDone = () => {\n    console.log(editCardState.deckName);\n  };\n\n  const onSubmit = () => {\n    updateCard(editCardState.card);\n  };\n\n  return (\n    <Fragment>\n      <NavBar deckName={editCardState.deckName} />\n      <h2 className=\"mt-2\">Edit Card</h2>\n      <div class=\"mb-3\">\n        <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n          Front\n        </label>\n        <textarea\n          class=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"2\"\n          placeholder={editCardState.front}\n          value={editCardState.front}\n          onChange={handleChange}\n        ></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n          Back\n        </label>\n        <textarea\n          class=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"2\"\n          placeholder={editCardState.back}\n          value={editCardState.back}\n          onChange={handleChange}\n        ></textarea>\n      </div>\n      <button\n        className=\"btn btn-secondary mr-2\"\n        id=\"doneEditCard\"\n        onClick={onDone}\n      >\n        Cancel\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        id=\"submitEditCard\"\n        onClick={onSubmit}\n      >\n        Submit\n      </button>\n    </Fragment>\n  );\n}\n\nexport default EditCard;\n"]},"metadata":{},"sourceType":"module"}