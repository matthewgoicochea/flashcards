{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport DeckList from \"./DeckList\";\nimport Study from \"./Study\";\nimport EditDeck from \"./EditDeck\";\nimport AddCard from \"./AddCard\";\nimport EditCard from \"./EditCard\";\nimport { createDeck, deleteCard, deleteDeck, listDecks } from \"../utils/api\";\nimport ViewDeck from \"./ViewDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [allDecks, setAllDecks] = useState({});\n  const [currentDeck, setCurrentDeck] = useState({});\n  const [currentDeckId, setCurrentDeckId] = useState(0);\n  const [newDeckName, setNewDeckName] = useState(\"\");\n  const [newDeckDescription, setNewDeckDescription] = useState(\"\");\n  const [newDeckObject, setNewDeckObject] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const [newCard, setNewCard] = useState({\n    front: \"\",\n    back: \"\"\n  });\n  const [studyState, setStudyState] = useState({\n    deckId: 0,\n    cards: null,\n    cardNumber: 0,\n    flipped: false,\n    name: null,\n    description: null,\n    deckLength: 0\n  });\n  const history = useHistory();\n\n  const handleSetDeck = id => {\n    setCurrentDeckId(id);\n  };\n\n  const OnClick = event => {\n    const btnType = event.target.id;\n    const deckId = event.target.parentNode.id; //console.log(btnType, deckId);\n\n    if (btnType === \"viewDeck\") {\n      setCurrentDeckId(deckId);\n      history.push(`/decks/${deckId}`);\n    }\n\n    if (btnType === \"studyDeck\") {\n      handleSetDeck(deckId);\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/study`);\n    }\n\n    if (btnType === \"deleteDeck\") {\n      const restart = window.confirm(\"Delete this deck? \\n \\n You will not be able to recover it.\");\n\n      if (restart) {\n        deleteDeck(deckId);\n        history.push(\"/\");\n      }\n    }\n\n    if (btnType === \"cancelCreateDeck\") {\n      history.push(\"/\");\n    }\n\n    if (btnType === \"submitCreateDeck\") {\n      setNewDeckObject({\n        name: newDeckName,\n        description: newDeckDescription\n      });\n      createDeck(newDeckObject).then(deck => history.push(`/decks/${deck.id}`));\n    }\n\n    if (btnType === \"addCards\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/cards/new`);\n    }\n\n    if (btnType === \"deleteCard\") {\n      const restart = window.confirm(\"Delete this card? \\n \\n You will not be able to recover it.\");\n\n      if (restart) {\n        deleteCard(event.target.parentNode.id);\n        history.go(0);\n      }\n    }\n\n    if (btnType === \"editDeck\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/edit/`);\n    }\n\n    if (btnType === \"cancelEditDeck\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/`);\n    }\n\n    if (btnType === \"doneAddCard\") {\n      history.push(\"/decks/:deckId/\");\n    }\n  };\n\n  const {\n    url\n  } = useRouteMatch(); //////////////\n  //////////////\n  /////////////\n\n  const [newDecks, setNewDecks] = useState({});\n  useEffect(() => {\n    listDecks().then(deck => {\n      setNewDecks(deck);\n    }); //console.log(newDecks);\n\n    const newDecksArray = Array.from(newDecks);\n    newDecksArray.forEach(deck => {\n      console.log(deck);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeckList, {\n            allDecksWithCards: allDecksWithCards,\n            setAllDecksWithCards: setAllDecksWithCards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/:cardId/edit\",\n          children: /*#__PURE__*/_jsxDEV(EditCard, {\n            OnClick: OnClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/new\",\n          children: /*#__PURE__*/_jsxDEV(AddCard, {\n            OnClick: OnClick,\n            newCard: newCard,\n            setNewCard: setNewCard,\n            currentDeck: currentDeck,\n            setCurrentDeck: setCurrentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/new\",\n          children: /*#__PURE__*/_jsxDEV(CreateDeck, {\n            OnClick: OnClick,\n            newDeckName: newDeckName,\n            setNewDeckName: setNewDeckName,\n            newDeckDescription: newDeckDescription,\n            setNewDeckDescription: setNewDeckDescription,\n            newDeckObject: newDeckObject,\n            setNewDeckObject: setNewDeckObject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/edit\",\n          children: /*#__PURE__*/_jsxDEV(EditDeck, {\n            OnClick: OnClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/study\",\n          children: /*#__PURE__*/_jsxDEV(Study, {\n            OnClick: OnClick,\n            studyState: studyState,\n            setStudyState: setStudyState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId\",\n          children: /*#__PURE__*/_jsxDEV(ViewDeck, {\n            OnClick: OnClick,\n            currentDeck: currentDeck,\n            setCurrentDeck: setCurrentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Home, {\n            OnClick: OnClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeckList, {\n            OnClick: OnClick,\n            allDecksWithCards: allDecks,\n            setAllDecksWithCards: setAllDecks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"3McLUPPtnYyNGG8zjLrb4txp3gk=\", false, function () {\n  return [useHistory, useRouteMatch];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","Fragment","useEffect","useState","Route","Switch","useHistory","useRouteMatch","Header","NotFound","Home","CreateDeck","DeckList","Study","EditDeck","AddCard","EditCard","createDeck","deleteCard","deleteDeck","listDecks","ViewDeck","Layout","allDecks","setAllDecks","currentDeck","setCurrentDeck","currentDeckId","setCurrentDeckId","newDeckName","setNewDeckName","newDeckDescription","setNewDeckDescription","newDeckObject","setNewDeckObject","name","description","newCard","setNewCard","front","back","studyState","setStudyState","deckId","cards","cardNumber","flipped","deckLength","history","handleSetDeck","id","OnClick","event","btnType","target","parentNode","push","restart","window","confirm","then","deck","go","url","newDecks","setNewDecks","newDecksArray","Array","from","forEach","console","log","allDecksWithCards","setAllDecksWithCards"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport DeckList from \"./DeckList\";\nimport Study from \"./Study\";\nimport EditDeck from \"./EditDeck\";\nimport AddCard from \"./AddCard\";\nimport EditCard from \"./EditCard\";\nimport { createDeck, deleteCard, deleteDeck, listDecks } from \"../utils/api\";\nimport ViewDeck from \"./ViewDeck\";\n\nfunction Layout() {\n  const [allDecks, setAllDecks] = useState({});\n  const [currentDeck, setCurrentDeck] = useState({});\n  const [currentDeckId, setCurrentDeckId] = useState(0);\n  const [newDeckName, setNewDeckName] = useState(\"\");\n  const [newDeckDescription, setNewDeckDescription] = useState(\"\");\n  const [newDeckObject, setNewDeckObject] = useState({\n    name: \"\",\n    description: \"\",\n  });\n  const [newCard, setNewCard] = useState({ front: \"\", back: \"\" });\n  const [studyState, setStudyState] = useState({\n    deckId: 0,\n    cards: null,\n    cardNumber: 0,\n    flipped: false,\n    name: null,\n    description: null,\n    deckLength: 0,\n  });\n\n  const history = useHistory();\n\n  const handleSetDeck = (id) => {\n    setCurrentDeckId(id);\n  };\n\n  const OnClick = (event) => {\n    const btnType = event.target.id;\n    const deckId = event.target.parentNode.id;\n    //console.log(btnType, deckId);\n    if (btnType === \"viewDeck\") {\n      setCurrentDeckId(deckId);\n      history.push(`/decks/${deckId}`);\n    }\n    if (btnType === \"studyDeck\") {\n      handleSetDeck(deckId);\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/study`);\n    }\n    if (btnType === \"deleteDeck\") {\n      const restart = window.confirm(\n        \"Delete this deck? \\n \\n You will not be able to recover it.\"\n      );\n      if (restart) {\n        deleteDeck(deckId);\n        history.push(\"/\");\n      }\n    }\n    if (btnType === \"cancelCreateDeck\") {\n      history.push(\"/\");\n    }\n    if (btnType === \"submitCreateDeck\") {\n      setNewDeckObject({ name: newDeckName, description: newDeckDescription });\n      createDeck(newDeckObject).then((deck) =>\n        history.push(`/decks/${deck.id}`)\n      );\n    }\n    if (btnType === \"addCards\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/cards/new`);\n    }\n    if (btnType === \"deleteCard\") {\n      const restart = window.confirm(\n        \"Delete this card? \\n \\n You will not be able to recover it.\"\n      );\n      if (restart) {\n        deleteCard(event.target.parentNode.id);\n        history.go(0);\n      }\n    }\n    if (btnType === \"editDeck\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/edit/`);\n    }\n    if (btnType === \"cancelEditDeck\") {\n      history.push(`/decks/${deckId ? deckId : currentDeck.id}/`);\n    }\n    if (btnType === \"doneAddCard\") {\n      history.push(\"/decks/:deckId/\");\n    }\n  };\n  const { url } = useRouteMatch();\n  //////////////\n  //////////////\n\n  /////////////\n  const [newDecks, setNewDecks] = useState({});\n\n  useEffect(() => {\n    listDecks().then((deck) => {\n      setNewDecks(deck);\n    });\n    //console.log(newDecks);\n    const newDecksArray = Array.from(newDecks);\n    newDecksArray.forEach((deck) => {\n      console.log(deck);\n    });\n  }, []);\n\n  return (\n    <Fragment>\n      <Header />\n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <h1>Test</h1>\n            <DeckList\n              allDecksWithCards={allDecksWithCards}\n              setAllDecksWithCards={setAllDecksWithCards}\n\t\t\t\t\t\t\t\n            />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <Header />\n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n\n        <Switch>\n          {/* EDIT CARD */}\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <EditCard OnClick={OnClick} />\n          </Route>\n          {/* ADD CARD */}\n          <Route path=\"/decks/:deckId/cards/new\">\n            <AddCard\n              OnClick={OnClick}\n              newCard={newCard}\n              setNewCard={setNewCard}\n              currentDeck={currentDeck}\n              setCurrentDeck={setCurrentDeck}\n            />\n          </Route>\n\n          {/* NEW DECK */}\n          <Route path=\"/decks/new\">\n            <CreateDeck\n              OnClick={OnClick}\n              newDeckName={newDeckName}\n              setNewDeckName={setNewDeckName}\n              newDeckDescription={newDeckDescription}\n              setNewDeckDescription={setNewDeckDescription}\n              newDeckObject={newDeckObject}\n              setNewDeckObject={setNewDeckObject}\n            />\n          </Route>\n          {/* EDIT DECK */}\n          <Route path=\"/decks/:deckId/edit\">\n            <EditDeck OnClick={OnClick} />\n          </Route>\n          {/* STUDY DECK */}\n          <Route path=\"/decks/:deckId/study\">\n            <Study\n              OnClick={OnClick}\n              studyState={studyState}\n              setStudyState={setStudyState}\n            />\n          </Route>\n          {/* VIEW DECK */}\n          <Route path=\"/decks/:deckId\">\n            <ViewDeck\n              OnClick={OnClick}\n              currentDeck={currentDeck}\n              setCurrentDeck={setCurrentDeck}\n            />\n          </Route>\n          {/* HOME */}\n          <Route exact={true} path=\"/\">\n            <Home OnClick={OnClick} />\n            <DeckList\n              OnClick={OnClick}\n              allDecksWithCards={allDecks}\n              setAllDecksWithCards={setAllDecks}\n            />\n          </Route>\n          {/* NOT FOUND */}\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}