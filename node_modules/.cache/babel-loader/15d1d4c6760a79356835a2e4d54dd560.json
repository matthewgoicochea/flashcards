{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { updateDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  OnClick\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const [editDeck, setEditDeck] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const [editState, setEditState] = useState({\n    deck: {\n      name: \"\",\n      description: \"\"\n    },\n    placeholderName: \"name\",\n    placeholderDescription: \"desc\"\n  });\n  useEffect(() => {\n    async function loadDecks() {\n      const response = await fetch(\"http://localhost:5000/decks\");\n      const decksFromAPI = await response.json();\n      setEditDeck(decksFromAPI);\n      console.log(editDeck);\n      setEditState();\n    }\n\n    loadDecks();\n  }, []);\n  const [newDeck, setNewDeck] = useState({\n    id: deckId,\n    name: \"\",\n    description: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: \"form-label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"exampleFormControlInput1\",\n        placeholder: \"name\" //editDeck ? `${editDeck[deckId].name}` : \"loading...\"\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        className: \"form-label\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"description\",\n        rows: \"3\",\n        placeholder: \"desc\" //editDeck ? `${editDeck[deckId].description}` : \"loading...\"\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        id: \"cancelEditDeck\",\n        onClick: OnClick,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        id: \"submitEditDeck\",\n        onClick: OnClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditDeck, \"bCl3xYf2nVSeVH8fmHfu6qM/it4=\", false, function () {\n  return [useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.jsx"],"names":["React","Fragment","useEffect","useState","useParams","updateDeck","EditDeck","OnClick","params","deckId","editDeck","setEditDeck","name","description","editState","setEditState","deck","placeholderName","placeholderDescription","loadDecks","response","fetch","decksFromAPI","json","console","log","newDeck","setNewDeck","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { updateDeck } from \"../utils/api\";\n\nfunction EditDeck({ OnClick }) {\n  const params = useParams();\n  const deckId = params.deckId;\n\n  const [editDeck, setEditDeck] = useState({\n    name: \"\",\n    description: \"\",\n  });\n\n  const [editState, setEditState] = useState({\n    deck: { name: \"\", description: \"\" },\n    placeholderName: \"name\",\n    placeholderDescription: \"desc\",\n  });\n\n  useEffect(() => {\n    async function loadDecks() {\n      const response = await fetch(\"http://localhost:5000/decks\");\n      const decksFromAPI = await response.json();\n      setEditDeck(decksFromAPI);\n      console.log(editDeck);\n\t\t\tsetEditState()\n    }\n    loadDecks();\n  }, []);\n\n  const [newDeck, setNewDeck] = useState({\n    id: deckId,\n    name: \"\",\n    description: \"\",\n  });\n\n  return (\n    <Fragment>\n      <div className=\"mb-3\">\n        <h1>Edit Deck</h1>\n        <label htmlFor=\"name\" className=\"form-label\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"exampleFormControlInput1\"\n          placeholder={\n            \"name\"\n            //editDeck ? `${editDeck[deckId].name}` : \"loading...\"\n          }\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"description\" className=\"form-label\">\n          Description\n        </label>\n        <textarea\n          className=\"form-control\"\n          id=\"description\"\n          rows=\"3\"\n          placeholder={\n            \"desc\"\n            //editDeck ? `${editDeck[deckId].description}` : \"loading...\"\n          }\n        ></textarea>\n        <button\n          className=\"btn btn-secondary\"\n          id=\"cancelEditDeck\"\n          onClick={OnClick}\n        >\n          Cancel\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          id=\"submitEditDeck\"\n          onClick={OnClick}\n        >\n          Submit\n        </button>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default EditDeck;\n"]},"metadata":{},"sourceType":"module"}