{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { readCard, readDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  OnClick\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const cardId = params.cardId;\n  const [editCardState, setEditCardState] = useState({\n    front: \"loading\"\n  });\n  useEffect(() => {\n    const deck = readDeck(deckId);\n    const card = readCard(cardId).then(card => setEditCardState({ ...editCardState,\n      front: card.front,\n      back: card.back\n    })); //setEditCardState({ ...editCardState, front: card.front, back: card.back });\n  }, []);\n\n  const handleBack = event => {};\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"exampleFormControlTextarea1\",\n        class: \"form-label\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"2\",\n        placeholder: editCardState.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"exampleFormControlTextarea1\",\n        class: \"form-label\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"2\",\n        placeholder: editCardState.back,\n        value: editCardState.back,\n        onChange: handleBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary\",\n      id: \"doneEditCard\",\n      onClick: OnClick,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      id: \"submitEditCard\",\n      onClick: OnClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditCard, \"7CmjxNr9s5EODNOgPrWJlq2rTeU=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditCard.jsx"],"names":["React","Fragment","useEffect","useState","useParams","readCard","readDeck","EditCard","OnClick","params","deckId","cardId","editCardState","setEditCardState","front","deck","card","then","back","handleBack","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAC7B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,MAAM,GAAGD,MAAM,CAACC,MAAtB;AACA,QAAMC,MAAM,GAAGF,MAAM,CAACE,MAAtB;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC;AAAEW,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAlD;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,IAAI,GAAGT,QAAQ,CAACI,MAAD,CAArB;AACA,UAAMM,IAAI,GAAGX,QAAQ,CAACM,MAAD,CAAR,CAAiBM,IAAjB,CAAuBD,IAAD,IACjCH,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBE,MAAAA,KAAK,EAAEE,IAAI,CAACF,KAAhC;AAAuCI,MAAAA,IAAI,EAAEF,IAAI,CAACE;AAAlD,KAAD,CADL,CAAb,CAFc,CAMd;AACD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,UAAU,GAAIC,KAAD,IAAW,CAE9B,CAFA;;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACE;AAAO,QAAA,GAAG,EAAC,6BAAX;AAAyC,QAAA,KAAK,EAAC,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,EAAE,EAAC,6BAFL;AAGE,QAAA,IAAI,EAAC,GAHP;AAIE,QAAA,WAAW,EAAER,aAAa,CAACE;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACE;AAAO,QAAA,GAAG,EAAC,6BAAX;AAAyC,QAAA,KAAK,EAAC,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,EAAE,EAAC,6BAFL;AAGE,QAAA,IAAI,EAAC,GAHP;AAIE,QAAA,WAAW,EAAEF,aAAa,CAACM,IAJ7B;AAKE,QAAA,KAAK,EAAEN,aAAa,CAACM,IALvB;AAMH,QAAA,QAAQ,EAAEC;AANP;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eA0BE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,EAAE,EAAC,cAAzC;AAAwD,MAAA,OAAO,EAAEX,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF,eA6BE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,EAAE,EAAC,gBAAvC;AAAwD,MAAA,OAAO,EAAEA,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAvDQD,Q;UACQH,S;;;KADRG,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { readCard, readDeck } from \"../utils/api\";\n\nfunction EditCard({ OnClick }) {\n  const params = useParams();\n  const deckId = params.deckId;\n  const cardId = params.cardId;\n\n  const [editCardState, setEditCardState] = useState({ front: \"loading\" });\n\n  useEffect(() => {\n    const deck = readDeck(deckId);\n    const card = readCard(cardId).then((card) =>\n      setEditCardState({ ...editCardState, front: card.front, back: card.back })\n    );\n\n    //setEditCardState({ ...editCardState, front: card.front, back: card.back });\n  }, []);\n\n  const handleBack = (event) => {\n\t\t\n\t}\n\n  return (\n    <Fragment>\n      <h3>Edit Card</h3>\n      <div class=\"mb-3\">\n        <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n          Front\n        </label>\n        <textarea\n          class=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"2\"\n          placeholder={editCardState.front}\n        ></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n          Back\n        </label>\n        <textarea\n          class=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"2\"\n          placeholder={editCardState.back}\n          value={editCardState.back}\n\t\t\t\t\tonChange={handleBack}\n        ></textarea>\n      </div>\n      <button className=\"btn btn-secondary\" id=\"doneEditCard\" onClick={OnClick}>\n        Done\n      </button>\n      <button className=\"btn btn-primary\" id=\"submitEditCard\" onClick={OnClick}>\n        Submit\n      </button>\n    </Fragment>\n  );\n}\n\nexport default EditCard;\n"]},"metadata":{},"sourceType":"module"}