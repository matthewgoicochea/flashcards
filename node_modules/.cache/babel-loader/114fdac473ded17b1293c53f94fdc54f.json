{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/TestDeck.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TestDeck() {\n  _s();\n\n  const [testDecks, setTestDecks] = useState({});\n  useEffect(() => {\n    async function loadDecks() {\n      const response = await fetch(\"http://localhost:5000/decks\");\n      const testDecksFromAPI = await response.json();\n      setTestDecks(testDecksFromAPI);\n    }\n\n    loadDecks();\n  }, []);\n  const decksArray = Array.from(testDecks);\n\n  for (let i = 0; i < decksArray.length; i++) {\n    console.log(decksArray[i].id);\n  }\n\n  const totalCards = decksArray.map(deck => deck.id).length;\n  const deckTitle = decksArray.map(deck => deck.name);\n\n  function DeckOne() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: deckTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [totalCards, \" CARDDS\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"Test text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  function NewDeck({\n    OnClick\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: deckTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [totalCards, \" cards\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"Test text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeckOne, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TestDeck, \"eUx7/WWgA1Rn4ZCuaSPM8GrghcE=\");\n\n_c = TestDeck;\nexport default TestDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestDeck\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/TestDeck.jsx"],"names":["React","Fragment","useEffect","useState","TestDeck","testDecks","setTestDecks","loadDecks","response","fetch","testDecksFromAPI","json","decksArray","Array","from","i","length","console","log","id","totalCards","map","deck","deckTitle","name","DeckOne","NewDeck","OnClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeK,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMC,gBAAgB,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA/B;AACAL,MAAAA,YAAY,CAACI,gBAAD,CAAZ;AACD;;AACDH,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AASA,QAAMK,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWT,SAAX,CAAnB;;AACA,OAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACI,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAE1CE,IAAAA,OAAO,CAACC,GAAR,CAAYN,UAAU,CAACG,CAAD,CAAV,CAAcI,EAA1B;AAIF;;AAEA,QAAMC,UAAU,GAAGR,UAAU,CAACS,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACH,EAA9B,EAAkCH,MAArD;AACA,QAAMO,SAAS,GAAGX,UAAU,CAACS,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACE,IAA9B,CAAlB;;AAEA,WAASC,OAAT,GAAmB;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BF;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAIH,UAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,WAASM,OAAT,CAAiB;AAAEC,IAAAA;AAAF,GAAjB,EAA8B;AAC5B,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BJ;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAIH,UAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtDQhB,Q;;KAAAA,Q;AAwDT,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n\nfunction TestDeck() {\n  const [testDecks, setTestDecks] = useState({});\n\n  useEffect(() => {\n    async function loadDecks() {\n      const response = await fetch(\"http://localhost:5000/decks\");\n      const testDecksFromAPI = await response.json();\n      setTestDecks(testDecksFromAPI);\n    }\n    loadDecks();\n  }, []);\n\n  const decksArray = Array.from(testDecks);\n  for (let i = 0; i < decksArray.length; i++) {\n\n    console.log(decksArray[i].id);\n  \n\t\n\t\n\t}\n\n  const totalCards = decksArray.map((deck) => deck.id).length;\n  const deckTitle = decksArray.map((deck) => deck.name);\n\n  function DeckOne() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{deckTitle}</h5>\n          <p>{totalCards} CARDDS</p>\n          <p className=\"card-text\">Test text</p>\n        </div>\n      </div>\n    );\n  }\n\n  function NewDeck({ OnClick }) {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{deckTitle}</h5>\n          <p>{totalCards} cards</p>\n          <p className=\"card-text\">Test text</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <h1>TEST</h1>\n      <DeckOne />\n    </Fragment>\n  );\n}\n\nexport default TestDeck;\n"]},"metadata":{},"sourceType":"module"}