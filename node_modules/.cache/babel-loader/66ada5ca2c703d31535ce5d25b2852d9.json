{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/DeckForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRouteMatch } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeckForm({\n  OnClick,\n  newDeckObject,\n  setNewDeckObject,\n  editState,\n  setEditState,\n  onCancel,\n  onSubmit\n}) {\n  _s();\n\n  // create deck handler\n  const handleChange = event => {\n    setNewDeckObject({ ...newDeckObject,\n      [event.target.name]: event.target.value\n    });\n  }; //edit deck handling\n\n\n  const handleNameChange = event => {\n    setEditState({ ...editState,\n      deckName: event.target.value,\n      editedDeck: { ...editState.editedDeck,\n        name: event.target.value\n      }\n    });\n  };\n\n  const handleDescriptionChange = event => {\n    setEditState({ ...editState,\n      editedDeck: { ...editState.editedDeck,\n        description: event.target.value\n      }\n    });\n  };\n\n  const {\n    url\n  } = useRouteMatch();\n\n  if (url.includes(\"edit\")) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\" //placeholder={editState.placeholderName}\n          ,\n          onChange: handleNameChange //value={editState.editedDeck.name}\n          ,\n          value: editState.deckName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          className: \"form-label\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"description\",\n          rows: \"3\" //placeholder={editState.placeholderDescription}\n          ,\n          onChange: handleDescriptionChange //value={editState.editedDeck.description}\n          ,\n          value: editState.deckDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mr-2 mt-2\",\n          id: \"cancelEditDeck\",\n          onClick: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-2\",\n          id: \"submitEditDeck\",\n          onClick: onSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deck-name\",\n        className: \"form-label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        id: \"name\",\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange,\n        value: newDeckObject.name,\n        placeholder: \"Deck Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deck-description\",\n        className: \"form-label\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"description\",\n        type: \"password\",\n        name: \"description\",\n        onChange: handleChange,\n        value: newDeckObject.description,\n        placeholder: \"Brief description of the deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2\",\n      id: \"cancelCreateDeck\",\n      onClick: OnClick,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      id: \"submitCreateDeck\",\n      onClick: OnClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckForm, \"e2YESlT7pkfSRzhGKx4li1Kwans=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = DeckForm;\nexport default DeckForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/DeckForm.jsx"],"names":["React","useRouteMatch","DeckForm","OnClick","newDeckObject","setNewDeckObject","editState","setEditState","onCancel","onSubmit","handleChange","event","target","name","value","handleNameChange","deckName","editedDeck","handleDescriptionChange","description","url","includes","deckDescription"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRouteMatch } from \"react-router\";\n\nfunction DeckForm({\n  OnClick,\n  newDeckObject,\n  setNewDeckObject,\n  editState,\n  setEditState,\n  onCancel,\n  onSubmit,\n}) {\n  // create deck handler\n  const handleChange = (event) => {\n    setNewDeckObject({\n      ...newDeckObject,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  //edit deck handling\n  const handleNameChange = (event) => {\n    setEditState({\n      ...editState,\n      deckName: event.target.value,\n      editedDeck: { ...editState.editedDeck, name: event.target.value },\n    });\n  };\n\n  const handleDescriptionChange = (event) => {\n    setEditState({\n      ...editState,\n\t\t\t\n      editedDeck: { ...editState.editedDeck, description: event.target.value },\n    });\n  };\n\n  const { url } = useRouteMatch();\n\n  if (url.includes(\"edit\")) {\n    return (\n      <>\n        <div className=\"mb-3\">\n          <label htmlFor=\"name\" className=\"form-label\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            //placeholder={editState.placeholderName}\n            onChange={handleNameChange}\n            //value={editState.editedDeck.name}\n            value={editState.deckName}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"description\" className=\"form-label\">\n            Description\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"description\"\n            rows=\"3\"\n            //placeholder={editState.placeholderDescription}\n            onChange={handleDescriptionChange}\n            //value={editState.editedDeck.description}\n            value={editState.deckDescription}\n          ></textarea>\n          <button\n            className=\"btn btn-secondary mr-2 mt-2\"\n            id=\"cancelEditDeck\"\n            onClick={onCancel}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-primary mt-2\"\n            id=\"submitEditDeck\"\n            onClick={onSubmit}\n          >\n            Submit\n          </button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <form>\n      <div className=\"mb-3\">\n        <label htmlFor=\"deck-name\" className=\"form-label\">\n          Name\n        </label>\n        <input\n          className=\"form-control\"\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={newDeckObject.name}\n          placeholder=\"Deck Name\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"deck-description\" className=\"form-label\">\n          Description\n        </label>\n        <textarea\n          className=\"form-control\"\n          id=\"description\"\n          type=\"password\"\n          name=\"description\"\n          onChange={handleChange}\n          value={newDeckObject.description}\n          placeholder=\"Brief description of the deck\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        className=\"btn btn-secondary mr-2\"\n        id=\"cancelCreateDeck\"\n        onClick={OnClick}\n      >\n        Cancel\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        id=\"submitCreateDeck\"\n        onClick={OnClick}\n      >\n        Submit\n      </button>\n    </form>\n  );\n}\n\nexport default DeckForm;\n"]},"metadata":{},"sourceType":"module"}