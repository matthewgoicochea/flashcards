{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport DeckList from \"./DeckList\";\nimport NewDeck from \"./NewDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [state, setState] = useState({\n    decks: []\n  });\n  const [decks, setDecks] = useState({});\n  let randdomNum = Math;\n  let deckList = [];\n  const history = useHistory();\n\n  const OnClick = event => {\n    const btnType = event.target.id; //Home Buttons\n\n    if (btnType === \"createDeck\") {\n      console.log(btnType);\n    }\n\n    if (btnType === \"viewDeck\") {\n      console.log(btnType);\n      history.push(\"/decks/:deckId\");\n    }\n\n    if (btnType === \"studyDeck\") {\n      console.log(btnType);\n      history.push(\"/decks/:deckId/study\");\n    }\n\n    if (btnType === \"deleteDeck\") {\n      console.log(btnType);\n    } //CreateDeckButtons\n\n\n    if (btnType === \"cancelCreateDeck\") {\n      console.log(btnType);\n      history.push(\"/\");\n    }\n\n    if (btnType === \"submitCreateDeck\") {\n      console.log(btnType); //create new deck and append to list\n\n      setDecks({ ...decks,\n        [deckCount]: btnType\n      });\n      deckCount++; //console.log(deckCount);\n    }\n  };\n\n  console.log(decks); //console.log(\"Here's the current State:\", state);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Home, {\n            OnClick: OnClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeckList, {\n            OnClick: OnClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/new\",\n          children: /*#__PURE__*/_jsxDEV(CreateDeck, {\n            OnClick: OnClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Layout, \"ix89BDblLrNT5Fa/5W0eI6C1MaE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useState","Route","Switch","useHistory","Header","NotFound","Home","CreateDeck","DeckList","NewDeck","Layout","state","setState","decks","setDecks","randdomNum","Math","deckList","history","OnClick","event","btnType","target","id","console","log","push","deckCount"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport DeckList from \"./DeckList\";\nimport NewDeck from \"./NewDeck\";\n\nfunction Layout() {\n  const [state, setState] = useState({\n    decks: [],\n  });\n\n  const [decks, setDecks] = useState({});\n  let randdomNum = Math;\n\n  let deckList = [];\n  const history = useHistory();\n\n  const OnClick = (event) => {\n    const btnType = event.target.id;\n    //Home Buttons\n    if (btnType === \"createDeck\") {\n      console.log(btnType);\n    }\n    if (btnType === \"viewDeck\") {\n      console.log(btnType);\n      history.push(\"/decks/:deckId\");\n    }\n    if (btnType === \"studyDeck\") {\n      console.log(btnType);\n      history.push(\"/decks/:deckId/study\");\n    }\n    if (btnType === \"deleteDeck\") {\n      console.log(btnType);\n    }\n    //CreateDeckButtons\n    if (btnType === \"cancelCreateDeck\") {\n      console.log(btnType);\n      history.push(\"/\");\n    }\n    if (btnType === \"submitCreateDeck\") {\n      console.log(btnType);\n      //create new deck and append to list\n      setDecks({ ...decks, [deckCount]: btnType });\n      deckCount++;\n      //console.log(deckCount);\n    }\n  };\n\n  console.log(decks);\n\n  //console.log(\"Here's the current State:\", state);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <Home OnClick={OnClick} />\n            <DeckList OnClick={OnClick} />\n          </Route>\n          <Route path=\"/decks/new\">\n            <CreateDeck OnClick={OnClick} />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}