{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/ViewDeck.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { readDeck } from \"../utils/api\";\nimport BreadcrumbBar from \"./BreadcrumbBar\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewDeck({\n  OnClick,\n  currentDeck,\n  setCurrentDeck\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const history = useHistory();\n  useEffect(() => {\n    const deck = readDeck(deckId);\n    deck.then(deck => {\n      setCurrentDeck({\n        name: deck.name,\n        description: deck.description,\n        cards: deck.cards,\n        id: deck.id,\n        study: false\n      });\n    });\n  }, []);\n\n  async function deleteDeck(event) {\n    const restart = window.confirm(\"Delete this deck? \\n \\n You will not be able to recover it.\");\n\n    if (restart) {\n      /*const response = await fetch(\n        `http://localhost:5000/decks/${currentDeck.id}`,\n        { method: \"DELETE\" }\n      );*/\n      fetch(`http://localhost:5000/decks/${currentDeck.id}`, {\n        method: \"DELETE\"\n      });\n      history.push(\"/\");\n    }\n  }\n\n  const deckControlButtons = /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mr-2\",\n          id: \"editDeck\",\n          onClick: OnClick,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mr-2\",\n          id: \"studyDeck\",\n          onClick: OnClick,\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mr-2\",\n          id: \"addCards\",\n          onClick: OnClick,\n          children: \"Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col text-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          id: \"deleteDeck\",\n          onClick: deleteDeck,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n\n  const OnEditCard = event => {\n    const cardId = event.target.parentNode.id;\n    history.push(`/decks/${deckId}/cards/${cardId}/edit`);\n  };\n\n  const cardTemplate = (front, back, id) => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card border-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: front\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card border-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: back\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              id: `${id}`,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary mr-2\",\n                id: \"editCard\",\n                onClick: OnEditCard,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                id: \"deleteCard\",\n                onClick: OnClick,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n\n  const cards = currentDeck.cards ? currentDeck.cards.map(card => cardTemplate(card.front, card.back, card.id)) : \"loading...\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadcrumbBar, {\n      nav1: currentDeck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: currentDeck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentDeck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), deckControlButtons, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewDeck, \"l0C8nt3q8kY80OQA2Ts09wPR1QQ=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ViewDeck;\nexport default ViewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDeck\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/ViewDeck.jsx"],"names":["React","Fragment","useEffect","useHistory","useParams","readDeck","BreadcrumbBar","NavBar","ViewDeck","OnClick","currentDeck","setCurrentDeck","params","deckId","history","deck","then","name","description","cards","id","study","deleteDeck","event","restart","window","confirm","fetch","method","push","deckControlButtons","OnEditCard","cardId","target","parentNode","cardTemplate","front","back","map","card"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { readDeck } from \"../utils/api\";\nimport BreadcrumbBar from \"./BreadcrumbBar\";\nimport NavBar from \"./NavBar\";\n\nfunction ViewDeck({ OnClick, currentDeck, setCurrentDeck }) {\n  const params = useParams();\n  const deckId = params.deckId;\n  const history = useHistory();\n\n  useEffect(() => {\n    const deck = readDeck(deckId);\n    deck.then((deck) => {\n      setCurrentDeck({\n        name: deck.name,\n        description: deck.description,\n        cards: deck.cards,\n        id: deck.id,\n        study: false,\n      });\n    });\n  }, []);\n\n  async function deleteDeck(event) {\n    const restart = window.confirm(\n      \"Delete this deck? \\n \\n You will not be able to recover it.\"\n    );\n    if (restart) {\n      /*const response = await fetch(\n        `http://localhost:5000/decks/${currentDeck.id}`,\n        { method: \"DELETE\" }\n      );*/\n      fetch(`http://localhost:5000/decks/${currentDeck.id}`, {\n        method: \"DELETE\",\n      });\n\n      history.push(\"/\");\n    }\n  }\n\n  const deckControlButtons = (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col\">\n          <button\n            className=\"btn btn-secondary mr-2\"\n            id=\"editDeck\"\n            onClick={OnClick}\n          >\n            Edit\n          </button>\n          <button\n            className=\"btn btn-primary mr-2\"\n            id=\"studyDeck\"\n            onClick={OnClick}\n          >\n            Study\n          </button>\n          <button\n            className=\"btn btn-primary mr-2\"\n            id=\"addCards\"\n            onClick={OnClick}\n          >\n            Add Cards\n          </button>\n        </div>\n        <div className=\"col text-right\">\n          <button\n            className=\"btn btn-danger\"\n            id=\"deleteDeck\"\n            onClick={deleteDeck}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </Fragment>\n  );\n\n  const OnEditCard = (event) => {\n    const cardId = event.target.parentNode.id;\n    history.push(`/decks/${deckId}/cards/${cardId}/edit`);\n  };\n\n  const cardTemplate = (front, back, id) => (\n    <Fragment key={id}>\n      <li className=\"list-group-item\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <div className=\"card border-0\">\n              <div className=\"card-body\">\n                <p className=\"card-text\">{front}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-6\">\n            <div className=\"card border-0\">\n              <div className=\"card-body\">\n                <p className=\"card-text\">{back}</p>\n              </div>\n              <div className=\"text-right\" id={`${id}`}>\n                <button\n                  className=\"btn btn-secondary mr-2\"\n                  id=\"editCard\"\n                  onClick={OnEditCard}\n                >\n                  Edit\n                </button>\n                <button\n                  className=\"btn btn-danger\"\n                  id=\"deleteCard\"\n                  onClick={OnClick}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>\n    </Fragment>\n  );\n\n  const cards = currentDeck.cards\n    ? currentDeck.cards.map((card) =>\n        cardTemplate(card.front, card.back, card.id)\n      )\n    : \"loading...\";\n\n  return (\n    <Fragment>\n      <BreadcrumbBar nav1={currentDeck.name} />\n      <h4>{currentDeck.name}</h4>\n      <p>{currentDeck.description}</p>\n      {deckControlButtons}\n      <h2>Cards</h2>\n      <ul className=\"list-group\">{cards}</ul>\n    </Fragment>\n  );\n}\n\nexport default ViewDeck;\n"]},"metadata":{},"sourceType":"module"}