{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/AddCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { readDeck } from \"../utils/api\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard({\n  OnClick,\n  currentDeck,\n  newCard,\n  setNewCard\n}) {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const deckId = params.deckId;\n  useEffect(() => {\n    const deck = readDeck(deckId);\n    console.log(deck); //  deck.then((deck) => console.log(deck));\n  }, []);\n\n  const handleFront = event => {\n    setNewCard({ ...newCard,\n      front: `${event.target.value}`\n    });\n  };\n\n  const handleBack = event => {\n    setNewCard({ ...newCard,\n      back: `${event.target.value}`\n    });\n  };\n\n  const OnDone = () => {\n    history.push(`/decks/${deckId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      OnClick: OnClick,\n      deckName: currentDeck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [currentDeck.name, \": Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"exampleFormControlTextarea1\",\n        className: \"form-label\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"front\",\n        type: \"text\",\n        name: \"front\",\n        onChange: handleFront //value={newCard.front}\n        ,\n        rows: \"2\",\n        placeholder: \"Front side of card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"exampleFormControlTextarea1\",\n        className: \"form-label\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"back\",\n        type: \"text\",\n        name: \"back\",\n        onChange: handleBack //value={newCard.back}\n        ,\n        rows: \"2\",\n        placeholder: \"Back side of card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary\",\n      id: \"doneAddCard\",\n      onClick: OnDone,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      id: \"saveAddCard\",\n      onClick: OnClick,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCard, \"kW6iZuCyn1Rcf65yrTAX3Zhj9pE=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/AddCard.jsx"],"names":["React","Fragment","useEffect","useHistory","useParams","readDeck","NavBar","AddCard","OnClick","currentDeck","newCard","setNewCard","history","params","deckId","deck","console","log","handleFront","event","front","target","value","handleBack","back","OnDone","push","name"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { readDeck } from \"../utils/api\";\nimport NavBar from \"./NavBar\";\n\nfunction AddCard({ OnClick, currentDeck, newCard, setNewCard }) {\n  const history = useHistory();\n  const params = useParams();\n  const deckId = params.deckId;\n\n  useEffect(() => {\n    const deck = readDeck(deckId);\n    console.log(deck);\n    //  deck.then((deck) => console.log(deck));\n  }, []);\n\n  const handleFront = (event) => {\n    setNewCard({ ...newCard, front: `${event.target.value}` });\n  };\n\n  const handleBack = (event) => {\n    setNewCard({ ...newCard, back: `${event.target.value}` });\n  };\n\n  const OnDone = () => {\n    history.push(`/decks/${deckId}`);\n  };\n\n  return (\n    <Fragment>\n      <NavBar OnClick={OnClick} deckName={currentDeck.name} />\n      <h3>{currentDeck.name}: Add Card</h3>\n      <div className=\"mb-3\">\n        <label for=\"exampleFormControlTextarea1\" className=\"form-label\">\n          Front\n        </label>\n        <textarea\n          className=\"form-control\"\n          id=\"front\"\n          type=\"text\"\n          name=\"front\"\n          onChange={handleFront}\n          //value={newCard.front}\n          rows=\"2\"\n          placeholder=\"Front side of card\"\n        ></textarea>\n      </div>\n      <div className=\"mb-3\">\n        <label for=\"exampleFormControlTextarea1\" className=\"form-label\">\n          Back\n        </label>\n        <textarea\n          className=\"form-control\"\n          id=\"back\"\n          type=\"text\"\n          name=\"back\"\n          onChange={handleBack}\n          //value={newCard.back}\n          rows=\"2\"\n          placeholder=\"Back side of card\"\n        ></textarea>\n      </div>\n      <button className=\"btn btn-secondary\" id=\"doneAddCard\" onClick={OnDone}>\n        Done\n      </button>\n      <button className=\"btn btn-primary\" id=\"saveAddCard\" onClick={OnClick}>\n        Save\n      </button>\n    </Fragment>\n  );\n}\n\nexport default AddCard;\n"]},"metadata":{},"sourceType":"module"}