{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study({\n  studyDeck,\n  setStudyDeck,\n  studyState,\n  setStudyState\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const history = useHistory();\n  const deckLength = studyDeck ? studyState.cards.length : \"...loading\";\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await fetch(`http://localhost:5000/decks/${deckId}?_embed=cards`);\n      const deck = await response.json();\n      setStudyDeck(deck.cards);\n      setStudyState({ ...studyState,\n        cards: deck.cards,\n        name: deck.name\n      });\n    }\n\n    loadDeck();\n  }, []);\n\n  const onFlip = () => {\n    setStudyState({ ...studyState,\n      flipped: !studyState.flipped\n    });\n  };\n\n  const onNext = () => {\n    if (studyState.studyCardNum + 1 === deckLength) {\n      const restart = window.confirm(\"Restart cards? \\n \\n Click 'cancel' to return to the home page.\");\n\n      if (restart) {\n        setStudyState({ ...studyState,\n          studyCardNum: 0,\n          flipped: false\n        });\n      } else {\n        history.push(\"/\");\n      }\n    } else {\n      setStudyState({ ...studyState,\n        flipped: false,\n        studyCardNum: studyState.studyCardNum + 1\n      });\n    }\n  };\n\n  const flipBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onFlip,\n    className: \"btn btn-secondary\",\n    children: \"Flip\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n\n  const bothBtns = /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onFlip,\n      id: \"flipFront\",\n      className: \"btn btn-secondary\",\n      children: \"Flip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onNext,\n      id: \"flipBack\",\n      className: \"btn btn-primary\",\n      children: \"Flip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n\n  const front = studyDeck ? studyDeck[studyState.studyCardNum].front : \"loading...\";\n  const back = studyDeck ? studyDeck[studyState.studyCardNum].back : \"loading...\";\n\n  const studyCard = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [\"Card \", studyState.studyCardNum + 1, \" of \", deckLength]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: studyState.flipped ? back : front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), studyState.flipped ? bothBtns : flipBtn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Study: \", studyDeck ? studyState.name : \"...loading\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), studyState.studyCardNum <= deckLength ? studyCard : \"...loading\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Study, \"l0C8nt3q8kY80OQA2Ts09wPR1QQ=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n/*\n  const [studyDeck, setStudyDeck] = useState(false);\n  const [studyState, setStudyState] = useState({\n    studyCardNum: 0,\n    flipped: false,\n    cards: {},\n  });*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study.jsx"],"names":["React","Fragment","useEffect","useHistory","useParams","Study","studyDeck","setStudyDeck","studyState","setStudyState","params","deckId","history","deckLength","cards","length","loadDeck","response","fetch","deck","json","name","onFlip","flipped","onNext","studyCardNum","restart","window","confirm","push","flipBtn","bothBtns","front","back","studyCard"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\n\nfunction Study({ studyDeck, setStudyDeck, studyState, setStudyState }) {\n  const params = useParams();\n  const deckId = params.deckId;\n  const history = useHistory();\n\n  const deckLength = studyDeck ? studyState.cards.length : \"...loading\";\n\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await fetch(\n        `http://localhost:5000/decks/${deckId}?_embed=cards`\n      );\n      const deck = await response.json();\n      setStudyDeck(deck.cards);\n      setStudyState({ ...studyState, cards: deck.cards, name: deck.name });\n    }\n    loadDeck();\n  }, []);\n\n  const onFlip = () => {\n    setStudyState({ ...studyState, flipped: !studyState.flipped });\n  };\n\n  const onNext = () => {\n    if (studyState.studyCardNum + 1 === deckLength) {\n      const restart = window.confirm(\n        \"Restart cards? \\n \\n Click 'cancel' to return to the home page.\"\n      );\n      if (restart) {\n        setStudyState({\n          ...studyState,\n          studyCardNum: 0,\n          flipped: false,\n        });\n      } else {\n        history.push(\"/\");\n      }\n    } else {\n      setStudyState({\n        ...studyState,\n        flipped: false,\n        studyCardNum: studyState.studyCardNum + 1,\n      });\n    }\n  };\n\n  const flipBtn = (\n    <button onClick={onFlip} className=\"btn btn-secondary\">\n      Flip\n    </button>\n  );\n\n  const bothBtns = (\n    <Fragment>\n      <button onClick={onFlip} id=\"flipFront\" className=\"btn btn-secondary\">\n        Flip\n      </button>\n      <button onClick={onNext} id=\"flipBack\" className=\"btn btn-primary\">\n        Flip\n      </button>\n    </Fragment>\n  );\n\n  const front = studyDeck\n    ? studyDeck[studyState.studyCardNum].front\n    : \"loading...\";\n\n  const back = studyDeck\n    ? studyDeck[studyState.studyCardNum].back\n    : \"loading...\";\n\n  const studyCard = (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">\n          Card {studyState.studyCardNum + 1} of {deckLength}\n        </h5>\n        <p className=\"card-text\">{studyState.flipped ? back : front}</p>\n        {studyState.flipped ? bothBtns : flipBtn}\n      </div>\n    </div>\n  );\n  return (\n    <Fragment>\n      <h1>Study: {studyDeck ? studyState.name : \"...loading\"}</h1>\n      {studyState.studyCardNum <= deckLength ? studyCard : \"...loading\"}\n    </Fragment>\n  );\n}\n\nexport default Study;\n\n/*\n  const [studyDeck, setStudyDeck] = useState(false);\n  const [studyState, setStudyState] = useState({\n    studyCardNum: 0,\n    flipped: false,\n    cards: {},\n  });*/\n"]},"metadata":{},"sourceType":"module"}