{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study({\n  OnClick,\n  currentDeckId,\n  setCurrentDeckId\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId; //const [studyCardNum, setStudyCardNum] = useState(0);\n\n  const [studyState, setStudyState] = useState({\n    studyCardNum: 0,\n    flipped: false\n  });\n\n  const handleSetDeck = id => {\n    setCurrentDeckId(id);\n  }; //\n\n\n  const [studyDeck, setStudyDeck] = useState(false);\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await fetch(`http://localhost:5000/cards?deckId=${deckId}` //`http://localhost:5000/cards?deckId=${currentDeckId}`\n      );\n      const deck = await response.json();\n      console.log(deck);\n      setStudyDeck(deck);\n      const front = await studyDeck.front;\n    }\n\n    loadDeck();\n  }, []);\n\n  const onFlip = () => {\n    setStudyState({ ...studyState,\n      flipped: !studyState.flipped\n    });\n  };\n\n  const onNext = () => {\n    setStudyState({ ...studyState,\n      flipped: false,\n      studyCardNum: studyState.studyCardNum + 1\n    });\n  };\n\n  const flipBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onFlip,\n    className: \"btn btn-secondary\",\n    children: \"Flip\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n\n  const bothBtns = /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onFlip,\n      id: \"flipFront\",\n      className: \"btn btn-secondary\",\n      children: \"Flip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onNext,\n      id: \"flipBack\",\n      className: \"btn btn-primary\",\n      children: \"Flip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n\n  const front = studyDeck ? studyDeck[studyState.studyCardNum].front : \"loading...\";\n  const back = studyDeck ? studyDeck[studyState.studyCardNum].back : \"loading...\";\n\n  const studyCard = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: \"Card X of Y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: studyState.flipped ? back : front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), studyState.flipped ? bothBtns : flipBtn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Study: Current Deck Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), studyCard]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Study, \"9J16TuceZrPIsWAWDr0L1fl1hng=\", false, function () {\n  return [useParams];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study.jsx"],"names":["React","Fragment","useEffect","useState","useParams","Study","OnClick","currentDeckId","setCurrentDeckId","params","deckId","studyState","setStudyState","studyCardNum","flipped","handleSetDeck","id","studyDeck","setStudyDeck","loadDeck","response","fetch","deck","json","console","log","front","onFlip","onNext","flipBtn","bothBtns","back","studyCard"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\n\nfunction Study({ OnClick, currentDeckId, setCurrentDeckId }) {\n  const params = useParams();\n  const deckId = params.deckId;\n  //const [studyCardNum, setStudyCardNum] = useState(0);\n  const [studyState, setStudyState] = useState({\n    studyCardNum: 0,\n    flipped: false,\n  });\n\n  const handleSetDeck = (id) => {\n    setCurrentDeckId(id);\n  };\n  //\n  const [studyDeck, setStudyDeck] = useState(false);\n\n\n  useEffect(() => {\n    async function loadDeck() {\n      const response = await fetch(\n        `http://localhost:5000/cards?deckId=${deckId}`\n        //`http://localhost:5000/cards?deckId=${currentDeckId}`\n      );\n      const deck = await response.json();\n      console.log(deck);\n      setStudyDeck(deck);\n      const front = await studyDeck.front;\n    }\n    loadDeck();\n  }, []);\n\n  const onFlip = () => {\n    setStudyState({ ...studyState, flipped: !studyState.flipped });\n  };\n\n  const onNext = () => {\n    setStudyState({\n      ...studyState,\n      flipped: false,\n      studyCardNum: studyState.studyCardNum + 1,\n    });\n  };\n\n  const flipBtn = (\n    <button onClick={onFlip} className=\"btn btn-secondary\">\n      Flip\n    </button>\n  );\n\n  const bothBtns = (\n    <Fragment>\n      <button onClick={onFlip} id=\"flipFront\" className=\"btn btn-secondary\">\n        Flip\n      </button>\n      <button onClick={onNext} id=\"flipBack\" className=\"btn btn-primary\">\n        Flip\n      </button>\n    </Fragment>\n  );\n\n  const front = studyDeck\n    ? studyDeck[studyState.studyCardNum].front\n    : \"loading...\";\n  const back = studyDeck\n    ? studyDeck[studyState.studyCardNum].back\n    : \"loading...\";\n\n  const studyCard = (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">Card X of Y</h5>\n        <p className=\"card-text\">\n          {studyState.flipped ? back : front}\n          {/*studyDeck ? studyDeck[studyState.studyCardNum].front : \"loading...\"*/}\n          {/*flipped ? back : front*/}\n        </p>\n        {/*flipped ? bothBtns : flipBtn*/}\n        {studyState.flipped ? bothBtns : flipBtn}\n      </div>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <h1>Study: Current Deck Name</h1>\n      {studyCard}\n    </Fragment>\n  );\n}\n\nexport default Study;\n"]},"metadata":{},"sourceType":"module"}