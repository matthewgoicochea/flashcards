{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/CreateDeck.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateDeck({\n  OnClick,\n  newDeckName,\n  setNewDeckName,\n  newDeckDescription,\n  setNewDeckDescription,\n  allDecks,\n  setAllDecks,\n  newDeckObject\n}) {\n  _s();\n\n  const handleNameChange = event => {\n    setNewDeckName(event.target.value);\n  };\n\n  const handleDescriptionChange = event => {\n    setNewDeckDescription(event.target.value);\n  };\n\n  useEffect(() => {\n    async function putNewDeck() {\n      const data = { ...allDecks,\n        newDeckObject\n      };\n      const response = await fetch(`http://localhost:5000/decks`, {\n        method: \"PUT\",\n        body: JSON.stringify(data)\n      });\n      const newDecksFromAPI = await response.json();\n      setAllDecks(newDecksFromAPI);\n    }\n\n    putNewDeck();\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deck-name\",\n          className: \"form-label\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"name\",\n          type: \"text\",\n          name: \"name\",\n          onChange: handleNameChange,\n          value: newDeckName,\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deck-description\",\n          className: \"form-label\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"exampleInputPassword1\",\n          type: \"password\",\n          name: \"description\",\n          onChange: handleDescriptionChange,\n          value: newDeckDescription,\n          placeholder: \"Brief description of the deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        id: \"cancelCreateDeck\",\n        onClick: OnClick,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        id: \"submitCreateDeck\",\n        onClick: OnClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateDeck, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CreateDeck;\nexport default CreateDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDeck\");","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/CreateDeck.jsx"],"names":["React","Fragment","useState","useEffect","CreateDeck","OnClick","newDeckName","setNewDeckName","newDeckDescription","setNewDeckDescription","allDecks","setAllDecks","newDeckObject","handleNameChange","event","target","value","handleDescriptionChange","putNewDeck","data","response","fetch","method","body","JSON","stringify","newDecksFromAPI","json"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n\nfunction CreateDeck({\n  OnClick,\n  newDeckName,\n  setNewDeckName,\n  newDeckDescription,\n  setNewDeckDescription,\n  allDecks,\n\tsetAllDecks,\n  newDeckObject,\n}) {\n  const handleNameChange = (event) => {\n    setNewDeckName(event.target.value);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setNewDeckDescription(event.target.value);\n  };\n\n  useEffect(() => {\n    async function putNewDeck() {\n      const data = { ...allDecks, newDeckObject };\n      const response = await fetch(`http://localhost:5000/decks`, {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n      });\n      const newDecksFromAPI = await response.json();\n      setAllDecks(newDecksFromAPI);\n    }\n    putNewDeck();\n  });\n\n  return (\n    <Fragment>\n      <h1>Create Deck</h1>\n      <form>\n        <div className=\"mb-3\">\n          <label htmlFor=\"deck-name\" className=\"form-label\">\n            Name\n          </label>\n          <input\n            className=\"form-control\"\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={handleNameChange}\n            value={newDeckName}\n            placeholder=\"Name\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"deck-description\" className=\"form-label\">\n            Description\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"exampleInputPassword1\"\n            type=\"password\"\n            name=\"description\"\n            onChange={handleDescriptionChange}\n            value={newDeckDescription}\n            placeholder=\"Brief description of the deck\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary\"\n          id=\"cancelCreateDeck\"\n          onClick={OnClick}\n        >\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          id=\"submitCreateDeck\"\n          onClick={OnClick}\n        >\n          Submit\n        </button>\n      </form>\n    </Fragment>\n  );\n}\n\nexport default CreateDeck;\n"]},"metadata":{},"sourceType":"module"}